{"version":3,"sources":["store/State.js","i18n/index.js","CRM.js","search/ResultList.jsx","search/SearchInstructions.jsx","profiles/RelatedItems.js","ImageGroup.jsx","map/Curve.js","profiles/ActorProfile.jsx","profiles/PlaceProfile.jsx","profiles/Utils.js","search/SearchPageMobile.jsx","search/SearchPageDesktop.jsx","map/OverviewMap.jsx","projects/SerbsInVienna.jsx","projects/CampOberhollabrunn.jsx","splash/SplashPageDesktop.jsx","help/Help.jsx","tour/Tour.js","PageWithMenuMobile.jsx","tour/map/MyPosition.jsx","tour/map/NextStop.jsx","tour/mobile/InfoPanel.jsx","tour/mobile/WaypointPage.jsx","tour/mobile/StartPage.jsx","tour/desktop/WaypointPage.jsx","tour/desktop/StartPage.jsx","SideMenu.jsx","PageWithMenuDesktop.jsx","PageWithMenu.jsx","splash/SplashPageMobile.jsx","App.js","splash/LoadingScreen.jsx","serviceWorkerRegistration.js","store/DataStore.js","index.js","i18n sync /^/.//messages_.*/.json$"],"names":["languageState","atom","key","default","window","localStorage","getItem","searchQueryState","searchResultState","overviewMapState","zoom","center","i18n","loadMessages","lang","messages","require","t","label","this","useI18N","useRecoilValue","useLang","useBilingual","trim","str","replace","description","indexOf","split","CRM","ICONS","E18_Physical_Thing","E21_Person","E74_Group","ResultList","props","Row","index","style","item","results","className","onClick","onSelect","modifier","icon","crmClass","properties","title","height","width","itemCount","length","itemSize","SearchInstructions","distinct","items","uris","map","filter","pos","RelatedItems","store","relevantTypes","P74_has_current_or_former_residence","OA8_begins_in","OA9_ends_in","places","relations","rel","includes","relationType","resolved","getPlaceWithLocation","relationTo","relation","p","obj","begins_in","ends_in","has_residence","all","location","find","P53_has_former_or_current_location","getActorsWithLocation","getRelatedItems","getValidDepictions","depictions","d","url","hasDepictions","ImageGroup","useState","open","selected","setSelected","useEffect","images","idx","src","alt","placeholder","backgroundColor","hideFirst","slice","mainSrc","prevSrc","prevIdx","getPrev","nextSrc","nextIdx","getNext","imageCaption","onMovePrevRequest","onMoveNextRequest","onCloseRequest","onClose","Curve","fromLatLon","toLatLon","curveLayer","markerLayer","opts","handler","curve","on","handles","h","pathOptions","color","weight","offsetX","offsetY","r","Math","sqrt","pow","theta","atan2","thetaOffset","PI","r2","cos","theta2","midpointX","data","sin","L","addTo","bringToBack","handleStyle","stroke","fillColor","handleColor","fillOpacity","radius","circleMarker","ActorProfile","mapRef","useRef","getTranslation","navigator","relatedPlaces","geometries","hasGeometry","centroids","geom","centroid","geometry","coordinates","reverse","current","leafletElement","fitBounds","bboxes","bbox","corners","min","apply","max","getUnionBounds","padding","start","end","drawArrow","PageWithMenu","backButton","Map","ref","zoomControl","attributionControl","isDesktop","TileLayer","GeoJSON","value","dataSource","renderHeader","renderRow","navigateTo","PlaceProfile","hasGeom","geojson","getBounds","actors","PROFILE_COMPONENTS","getProfileComponent","_","pushPage","component","type","SearchPage","useRecoilState","search","setSearch","setResults","onSearch","evt","query","target","toLowerCase","searchAll","onClearSearch","renderToolbar","onChange","result","DesktopSearchPage","OverviewMap","mapState","setMapState","setView","geoBounds","layerGroup","getZoom","addLayer","paths","forEach","begins","ends","Object","values","getDistinctPaths","lifePaths","l","path","actor","getCenter","hasLayer","removeLayer","placeStyle","weigth","feature","lonLat","CircleMarker","preferCanvas","DESCRIPTION_GERMAN","href","DESCRIPTION_ENGLISH","PAGE_TITLE","TEXT_TITLE","DESCRIPTION","SerbsInVienna","content","CampOberhollabrunn","SplashPageDesktop","goTo","SPLASH_MESSAGE","SearchPageDeskop","de","en","TITLE","CONTENT","Help","Tour","getNearestWaypoint","currentPos","coords","longitude","latitude","distances","waypoints","features","f","distance","minDistance","tour","Promise","axios","get","then","track","waypoint","record","findById","id","every","coord","isNaN","join","viewpoint","lonlat","buildWaypointFeatures","bounds","name","language","getProp","loadTour","load","loadJourney","response","PageWithMenuMobile","isMenuOpen","setMenuOpen","onDeviceBackButton","popPage","children","animation","mode","side","collapse","isOpen","OUTER_STYLE","INNER_STYLE","MyPosition","LayerGroup","NextStop","Pane","zIndex","JSON","stringify","InfoPanel","main","expanded","setExpanded","zoomHeaderImage","setZoomHeaderImage","next","dist","round","proximity","useGPS","scrollTop","vibrate","headerImage","startsWith","CSSTransition","in","timeout","isStart","isEnd","waypointIdx","backgroundImage","para","onReturn","onNextWaypoint","onPreviousWaypoint","PATH_STYLE","dashArray","WaypointPage","setWaypoint","setPos","currentIdx","lons","lats","paddingTopLeft","paddingBottomRight","innerHeight","watchId","geolocation","watchPosition","enableHighAccuracy","clearWatch","JOURNEY_STYLE","POIIcon","iconUrl","iconRetinaUrl","shadowUrl","shadowRetinaUrl","iconSize","iconAnchor","popupAnchor","shadowSize","shadowAnchor","TourStartPage","fullscreenMapRef","setTour","journey","setJourney","isJourneyFullscreen","setJourneyFullscreen","setTimeout","onStartTour","journeyPath","journeyPOIs","Marker","position","Popup","image","duration","dangerouslySetInnerHTML","__html","getDescription","onPrevWaypoint","StartPage","SideMenu","setLanguage","onChangeLanguage","setItem","mobileComponent","optDesktopComponent","pages","pageName","SplashPageMobile","SearchPageMobile","SearchPageDesktop","MobileTour","DesktopTour","inputId","checked","htmlFor","PageWithMenuDesktop","document","PageWithenu","SplashPage","App","nav","onpopstate","splashPage","renderPage","route","React","createElement","uuid","initialRoute","onPostPush","routes","pushedRoute","history","pushState","swipeable","LoadingScreen","indeterminate","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","DataStore","JsSearch","tokenizer","tokenize","text","addIndex","loadFile","entityType","reduce","concat","arr","allCoords","g","Array","isArray","minLon","maxLon","computeGeoBounds","sort","a","b","aBegins","aEnds","bBegins","bEnds","computeLifePaths","addDocuments","i","place","Icon","Default","prototype","_getIconUrl","mergeOptions","Launcher","screen","availWidth","isLoading","setIsLoading","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.300b4983.chunk.js","sourcesContent":["import { atom } from 'recoil';\n\nexport const languageState = atom({\n  key: 'language',\n  default: window.localStorage.getItem('zukunftsfonds.language') || 'en'\n});\n\nexport const searchQueryState = atom({\n  key: 'searchQuery',\n  default: ''\n});\n\nexport const searchResultState = atom({\n  key: 'searchResults',\n  default: []\n});\n\nexport const overviewMapState = atom({\n  key: 'overviewMap',\n  default: { zoom: null, center: null }\n});","import { useRecoilValue } from 'recoil';\nimport { languageState } from '../store/State';\n\nclass I18N {\n\n  constructor() {\n    this.messages = {};\n\n    // For potential future extension\n    this.loadMessages('de');\n  }\n\n  loadMessages = lang => {\n    this.messages[lang] = require(`./messages_${lang}.json`);\n  }\n\n  t = lang => label =>\n    lang in this.messages && label in this.messages[lang] ?\n      this.messages[lang][label] : label;\n\n}\n\nconst i18n = new I18N();\n\n// Wrapping I18N into a cool helper hook\nexport const useI18N = () => {\n\n  const lang = useRecoilValue(languageState);\n  return i18n.t(lang);\n\n}\n\n// Just a shorthand to use current language setting more easily\nexport const useLang = ()  =>\n  useRecoilValue(languageState)\n\n// Helper to handle the ad-hoc 'bilingual' description format of the project\nexport const useBilingual = () => {\n  \n  const lang = useRecoilValue(languageState);\n\n  // Helper to remove trailing + leading whitespace and dashes\n  const trim = str =>\n    str.replace(/^[-,\\s]+ | [-,\\s]+$/g, '');\n \n  return description => {\n    // Project convention is to use 12 dash characters as separators. Anyways,\n    // people aren't doing this consistently, sometimes using more or fewer dashes.\n    // We'll split on everything thats more than 9 consecutive dashes.\n    if (description.indexOf('---------') === -1) {\n      return description;\n    } else {\n      return lang === 'de' ? trim(description.split('---------')[0]) : trim(description.split('---------')[1]);\n    }\n  }\n\n}","const CRM = {\n\n  'E18_Physical_Thing': 'crm:E18 Physical Thing',\n  'E21_Person': 'crm:E21 Person',\n  'E74_Group': 'crm:E74 Group',\n\n  'OA8_begins_in': 'crm:OA8 begins in',\n  'OA9_ends_in': 'crm:OA9 ends in',\n\n  'P53_has_former_or_current_location': 'crm:P53 has former or current location',\n  'P74_has_current_or_former_residence': 'crm:P74 has current or former residence'\n\n}\n\nexport default CRM;","import React from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport { Icon, Ripple } from 'react-onsenui';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport CRM from '../CRM';\n\nimport './ResultList.scss';\n\nconst ICONS = {\n  [CRM.E18_Physical_Thing]: 'md-pin',\n  [CRM.E21_Person]: 'md-account',\n  [CRM.E74_Group]: 'md-accounts'\n}\n\nconst ResultList = props => {\n\n  const Row = ({ index, style }) => {\n    const item = props.results[index];\n\n    return (<div \n      className=\"search-result\" \n      style={style}\n      onClick={() => props.onSelect(props.results[index])}>\n\n      <Ripple modifier=\"light-gray\" />\n\n      <Icon icon={ICONS[item.crmClass]} />\n\n      <label>{item.properties.title}</label>\n    </div>)\n  }\n\n  return (\n    <div className=\"search-results\">\n      <AutoSizer>\n        {({ height, width}) => (\n          <List \n            height={height}\n            itemCount={props.results.length}\n            itemSize={58}\n            width={width}>\n            {Row}\n          </List>\n          )\n        }\n      </AutoSizer>\n    </div>\n  )\n\n}\n\nexport default ResultList;","import React from 'react';\nimport { useLang } from '../i18n';\n\nconst SearchInstructions = props => {\n\n  const lang = useLang();\n\n  return (\n    <div className=\"instructions\">\n      {lang === 'en' ?\n        'Please enter the name of a person or place.' :\n        'Bitte geben Sie den Namen einer Person oder eines Ortes ein.'\n      }\n    </div>\n  )\n\n}\n\nexport default SearchInstructions;","import CRM from '../CRM';\n\n// De-duplicates the list of items, using their URI for equality\nconst distinct = items => {\n  const uris = items.map(item => item['@id']);\n  return items.filter((item, pos) => uris.indexOf(item['@id']) === pos);\n}\n\n/** Helper class to deal with related places/actors more easily **/\nclass RelatedItems {\n\n  constructor(item, store) {\n    this.item = item;\n    this.store = store;\n  }\n\n  /**\n   * If this item is an actor, it will have places connected to it.\n   * This method performs a \"forward lookup\", based on the links\n   * included in this item.\n   * \n   * Returns an object with the following properties:\n   * \n   * places.begins_in\n   * places.ends_in\n   * places.has_residence\n   * places.all\n   * \n   * TODO should we memoize this?\n   */\n  get places() {\n    // Pick up the following CRM types\n    const relevantTypes = [\n      CRM.P74_has_current_or_former_residence,\n      CRM.OA8_begins_in,\n      CRM.OA9_ends_in\n    ];\n\n    // Relations with these types\n    const relations = this.item.relations.filter(rel =>\n      relevantTypes.includes(rel.relationType));\n\n    // Resolve referred locations to places\n    const places = relations.map(rel => ({\n      label: rel.label, \n      relationType: rel.relationType,\n      resolved: this.store.getPlaceWithLocation(rel.relationTo)\n    }));\n\n    // Shorthand\n    const filter = relation =>\n      places.filter(p => p.relationType === relation).map(obj => obj.resolved);\n\n    // TODO add all unique places\n    return {\n      begins_in: filter(CRM.OA8_begins_in),\n      ends_in: filter(CRM.OA9_ends_in),\n      has_residence: filter(CRM.P74_has_current_or_former_residence),\n      all: distinct(places.map(p => p.resolved)) // TODO de-duplicate\n    }\n  }\n\n  /**\n   * If this item is a place, other items in the store will have\n   * connections to it. This method performs a \"reverse lookup\",\n   * fetching every actor from the store that references this\n   * place.\n   */\n  get actors() {\n    const location = this.item.relations.find(rel => \n      rel.relationType === CRM.P53_has_former_or_current_location);\n\n    return location ?\n      this.store.getActorsWithLocation(location.relationTo) : [];\n  }\n\n}\n\nexport const getRelatedItems = (item, store) =>\n  new RelatedItems(item, store);","import React, { useEffect, useState } from 'react';\nimport Image from 'react-cool-img';\nimport Lightbox from 'react-image-lightbox';\n\nimport 'react-image-lightbox/style.css';\n\nconst getValidDepictions = depictions => depictions ? \n  depictions.filter(d => d.url.indexOf('http') === 0) : [];\n\nexport const hasDepictions = item =>\n  getValidDepictions(item.depictions).length > 0;\n\nconst ImageGroup = props => {\n\n  const depictions = getValidDepictions(props.depictions);\n\n  const [ selected, setSelected ] = useState(props.open ? 0 : null);\n\n  useEffect(() => {\n    if (props.open)\n      setSelected(0);\n    else \n      setSelected(null);\n  }, [ props.open ]);\n\n  const getPrev = idx => {\n    if (selected !== null && depictions.length > 1) {\n      const prevIdx = (depictions.length + selected - 1) % depictions.length;\n      return depictions[prevIdx].url + '?image_size=webview';\n    }\n  }\n\n  const getNext = idx => {\n    if (selected !== null && depictions.length > 1) {\n      const nextIdx = (selected + 1) % depictions.length;\n      return depictions[nextIdx].url + '?image_size=webview';\n    }\n  }\n\n  let images = depictions.map((d, idx) =>\n    <div key={d.url} className=\"image-wrapper\" onClick={() => setSelected(idx)}>\n      <Image \n        src={`${d.url}?image_size=thumbnail`}\n        alt={d.title} \n        placeholder=\"images/wait.svg\"\n        style={{ backgroundColor: '#dfdfdf' }} />\n\n      <div className=\"dim-mask\" />\n    </div>\n  );\n\n  if (props.hideFirst) \n    images = [...images.slice(1) ];\n\n\n  const onClose = () => {\n    setSelected(null);\n    props.onClose();\n  }\n\n  return (\n    <>\n      <div className=\"image-group\">\n        { images }\n      </div>\n\n      {selected !== null && \n        <Lightbox \n          mainSrc={`${depictions[selected].url}?image_size=webview`} \n          prevSrc={getPrev()}\n          nextSrc={getNext()}\n          imageCaption={depictions[selected].title}\n          onMovePrevRequest={() => setSelected((depictions.length + selected - 1) % depictions.length)}\n          onMoveNextRequest={() => setSelected((selected + 1) % depictions.length)}\n          onCloseRequest={onClose} />\n      }\n    </>\n  )\n\n}\n\nexport default ImageGroup;","import L from 'leaflet';\n\nimport '@elfalem/leaflet-curve';\n\n/**\n * Modified from https://gist.github.com/ryancatalani/6091e50bf756088bf9bf5de2017b32e6\n */\n\nexport default class Curve {\n\n  constructor(fromLatLon, toLatLon, curveLayer, markerLayer, opts) {\n    const pathOptions = opts || {\n      color: '#a98f54',\n      weight: 3\n    };\n\n    const offsetX = toLatLon[1] - fromLatLon[1];\n    const offsetY = toLatLon[0] - fromLatLon[0];\n\n    const r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2));\n    const theta = Math.atan2(offsetY, offsetX);\n\n    const thetaOffset = - (Math.PI / 10);\n\n    const r2 = (r / 2) / Math.cos(thetaOffset);\n    const theta2 = theta + thetaOffset;\n\n    const midpointX = (r2 * Math.cos(theta2)) + fromLatLon[1];\n    const midpointY = (r2 * Math.sin(theta2)) + fromLatLon[0];\n\n    const midpointLatLng = [ midpointY, midpointX ];\n\n    const data = [\n      'M', fromLatLon,\n      'Q', midpointLatLng,\n      toLatLon\n    ];\n\n    this.curve = L.curve(data, { ...pathOptions })\n      .addTo(curveLayer).bringToBack();\n\n    const handleStyle = {\n      stroke: false,\n      fillColor: pathOptions.handleColor || '#8a6100',\n      fillOpacity: 1,\n      radius: 6\n    }\n\n    this.handles = [\n      L.circleMarker(fromLatLon, handleStyle).addTo(markerLayer),\n      L.circleMarker(toLatLon, handleStyle).addTo(markerLayer)\n    ];\n  }\n\n  onClick = handler => {\n    this.curve.on('click', handler);\n    this.handles.map(h => h.on('click', handler));\n  }\n  \n}","import React, { useEffect, useRef } from 'react';\nimport { Icon, List, ListHeader, ListItem } from 'react-onsenui';\nimport { GeoJSON, Map, TileLayer } from 'react-leaflet';\nimport bbox from '@turf/bbox';\nimport centroid from '@turf/centroid';\nimport { hasGeometry, navigateTo } from './Utils';\nimport { getRelatedItems } from './RelatedItems';\nimport PageWithMenu from '../PageWithMenu';\nimport { useI18N, useBilingual } from '../i18n';\nimport ImageGroup, { hasDepictions } from '../ImageGroup';\nimport Curve from '../map/Curve';\n\nimport './Profile.scss';\n\nconst getUnionBounds = geometries => {\n  const bboxes = geometries.map(geom => bbox(geom));\n\n  const corners = [\n    Math.min.apply(null, bboxes.map(t => t[0])),\n    Math.min.apply(null, bboxes.map(t => t[1])),\n    Math.max.apply(null, bboxes.map(t => t[2])),\n    Math.max.apply(null, bboxes.map(t => t[3]))\n  ];\n\n  return [ // Leaflet order\n    [ corners[1], corners[0] ],\n    [ corners[3], corners[2] ]\n  ];\n}\n\nconst ActorProfile = props => {\n\n  const i18n = useI18N();\n\n  const mapRef = useRef();\n\n  const getTranslation = useBilingual();\n\n  const { item, store, navigator } = props;\n\n  const relatedPlaces = getRelatedItems(item, store).places.all;\n\n  const geometries = relatedPlaces.filter(p => hasGeometry(p));\n\n  const centroids = geometries.map(geom =>\n    // GeoJSON - extract just coords, and flip to Leaflet order\n    centroid(geom).geometry.coordinates.reverse());\n\n  useEffect(() => {\n    const drawArrow = map => {\n      const [ start, end ] = centroids;      \n      new Curve(start, end, map, map);\n    }\n\n    if (mapRef.current && geometries.length > 0) {\n      const map = mapRef.current.leafletElement;\n      map.fitBounds(getUnionBounds(geometries), { padding: [ 15, 15 ]});\n\n      if (centroids.length === 2)\n        drawArrow(map);\n    }\n  }, [ geometries, centroids ]);\n\n  return (\n    <PageWithMenu \n      backButton\n      className=\"profile actor\"\n      title={item.properties.title}\n      {...props}>\n\n      <div className=\"map-container\">\n        <Map \n          ref={mapRef}\n          zoomControl={false}\n          attributionControl={false}\n          style={props.isDesktop ? { height:'400px' }: { height:'200px' }}>\n          <TileLayer\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n          />\n          {geometries.map(geom => \n            <GeoJSON key={geom['@id']} data={geom} />\n          )}\n        </Map>\n      </div>\n\n      { item.description.map((d, idx) => \n        <div key={idx} className=\"description\">{getTranslation(d.value)}</div>\n      )}\n\n      { hasDepictions(item) && \n        <ImageGroup depictions={item.depictions} />\n      }\n\n      <List\n        className=\"related places\"\n        dataSource={relatedPlaces}\n        renderHeader={() =>\n          <ListHeader>\n            <Icon icon=\"md-pin\" />\n            <label>{i18n('Places')}</label>\n          </ListHeader>\n        }\n        renderRow={(r, idx) => \n          <ListItem key={idx} className=\"related residence\" onClick={navigateTo(r, navigator)}>\n            <span className=\"title\">{r.properties.title}</span>\n          </ListItem>\n        } />\n    </PageWithMenu>\n  )\n\n}\n\nexport default ActorProfile;","import React, { useEffect, useRef } from 'react';\nimport { Icon, List, ListHeader, ListItem } from 'react-onsenui';\nimport { GeoJSON, Map, TileLayer } from 'react-leaflet';\nimport bbox from '@turf/bbox';\nimport { getRelatedItems } from './RelatedItems';\nimport { navigateTo, hasGeometry } from './Utils';\nimport PageWithMenu from '../PageWithMenu';\nimport { useI18N, useBilingual } from '../i18n';\nimport ImageGroup, { hasDepictions } from '../ImageGroup';\n\nimport 'leaflet/dist/leaflet.css';\n\nimport './Profile.scss';\n\nconst getBounds = geojson => {\n  const corners = bbox(geojson);\n  return [ // Leaflet order\n    [ corners[1], corners[0] ],\n    [ corners[3], corners[2] ]\n  ];\n}\n\nconst PlaceProfile = props => {\n\n  const i18n = useI18N();\n\n  const getTranslation = useBilingual();\n\n  const mapRef = useRef();\n\n  const { item, navigator, store } = props;\n\n  const hasGeom = hasGeometry(item);\n\n  useEffect(() => {\n    if (mapRef.current && hasGeom) {\n      const map = mapRef.current.leafletElement;\n      map.fitBounds(getBounds(item));\n    }\n  }, [ item, hasGeom ]);\n\n  const actors = getRelatedItems(item, store).actors;\n\n  return (\n    <PageWithMenu \n      backButton\n      className=\"profile place\"\n      title={item.properties.title}\n      {...props}>\n\n      <div className=\"map-container\">\n        <Map \n          ref={mapRef}\n          zoomControl={false}\n          attributionControl={false}>\n          <TileLayer\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n          />\n          { hasGeom && <GeoJSON data={item} /> }\n        </Map>\n      </div>\n\n      { item.description && item.description.map((d, idx) => \n        <div key={idx} className=\"description\">{getTranslation(d.value)}</div>\n      )}\n\n      { hasDepictions(item) && \n        <ImageGroup depictions={item.depictions} />\n      }\n\n      <List\n        className=\"related actors\"\n        dataSource={actors}\n        renderHeader={() =>\n          <ListHeader>\n            <Icon icon=\"md-account\" />\n            <label>{i18n('People')}</label>\n          </ListHeader>\n        }\n        renderRow={(r, idx) => \n          <ListItem key={idx} className=\"related residence\" onClick={navigateTo(r, navigator)}>\n            <span className=\"title\">{r.properties.title}</span>\n          </ListItem>\n        } />\n    </PageWithMenu>\n  )\n\n}\n\nexport default PlaceProfile;","import ActorProfile from './ActorProfile';\nimport PlaceProfile from './PlaceProfile';\nimport CRM from '../CRM';\n\nconst PROFILE_COMPONENTS = {\n  [CRM.E18_Physical_Thing]: PlaceProfile,\n  [CRM.E21_Person]: ActorProfile,\n  [CRM.E74_Group]: ActorProfile\n}\n\n/** Returns the right JSX profile component for this item **/\nexport const getProfileComponent = item => \n  PROFILE_COMPONENTS[item.crmClass];\n\n/** Returns a handler function for navigating to the view appropriate to the given item **/\nexport const navigateTo = (item, navigator) => _ =>\n  navigator.pushPage({ component: getProfileComponent(item), item });\n\n/** Helper to determine whether the item has any non-empty geometries **/\nexport const hasGeometry = item => {\n  if (!item)\n    return false; \n\n  if (!item.geometry)\n    return false; \n\n  if (item.geometry.type === 'GeometryCollection')\n    return item.geometry.geometries?.length > 0 && item.geometry.geometries[0].coordinates;\n\n  return item.geometry?.coordinates?.length > 0;\n}\n","import React from 'react';\nimport { BackButton, Icon, Page, Input, Toolbar, ToolbarButton } from 'react-onsenui';\nimport ResultList from './ResultList';\nimport SearchInstructions from './SearchInstructions';\nimport { getProfileComponent } from '../profiles/Utils';\nimport { useRecoilState } from 'recoil';\nimport { searchQueryState, searchResultState } from '../store/State';\nimport { useI18N }from '../i18n';\n\nimport './SearchPage.scss';\n\nconst SearchPage = props => {\n\n  const i18n = useI18N();\n\n  // We'll keep search state global, so we can persist across page navigation\n  const [ search, setSearch ] = useRecoilState(searchQueryState);  \n  const [ results, setResults ] = useRecoilState(searchResultState);\n\n  const onSearch = evt => {\n    const query = evt.target.value.toLowerCase();\n\n    // For some weird reason, OnsenUI SearchInput also triggers\n    // onChange when losing focus, causing an unwanted re-render\n    if (search !== query) {\n      setSearch(query);\n\n      const results = props.store.searchAll(query);\n      setResults(results);\n    }\n  }\n\n  const onSelectResult = result =>\n    props.navigator.pushPage({ \n      component: getProfileComponent(result),\n      item: result \n    });\n\n  const onClearSearch = () => {\n    setSearch('');\n    setResults([]);\n  }\n\n  return (\n    <Page\n      className=\"search\"\n      renderToolbar={() => \n        <Toolbar>\n          <div className=\"left\">\n            <BackButton />\n          </div>\n\n          <div className=\"center\">\n            <Input\n              value={search}\n              placeholder={i18n('Search')}\n              onChange={onSearch} />\n          </div>\n          \n          <div className=\"right\">\n            <ToolbarButton>\n              <Icon icon=\"md-close\" onClick={onClearSearch} />\n            </ToolbarButton>\n          </div>\n        </Toolbar>\n      }>\n\n      {results.length > 0 ?\n        <ResultList\n          results={results} \n          onSelect={onSelectResult} /> : <SearchInstructions /> }\n    </Page>\n  )\n\n}\n\nexport default SearchPage;","import React from 'react';\nimport { Input } from 'react-onsenui';\nimport ResultList from './ResultList';\nimport SearchInstructions from './SearchInstructions';\nimport { getProfileComponent } from '../profiles/Utils';\nimport { useRecoilState } from 'recoil';\nimport { searchQueryState, searchResultState } from '../store/State';\nimport { useI18N }from '../i18n';\nimport PageWithMenuDesktop from '../PageWithMenuDesktop';\n\nimport './SearchPage.scss';\n\nconst DesktopSearchPage = props => {\n\n  const i18n = useI18N();\n\n  // We'll keep search state global, so we can persist across page navigation\n  const [ search, setSearch ] = useRecoilState(searchQueryState);  \n  const [ results, setResults ] = useRecoilState(searchResultState);\n\n  const onSearch = evt => {\n    const query = evt.target.value.toLowerCase();\n\n    // For some weird reason, OnsenUI SearchInput also triggers\n    // onChange when losing focus, causing an unwanted re-render\n    if (search !== query) {\n      setSearch(query);\n\n      const results = props.store.searchAll(query);\n      setResults(results);\n    }\n  }\n\n  const onSelectResult = result =>\n    props.navigator.pushPage({ \n      component: getProfileComponent(result, true),\n      item: result \n    });\n\n  return (\n    <PageWithMenuDesktop \n      className=\"search\"\n      current=\"Search\"\n      title=\"Search\"\n      {...props}>\n\n      <div className=\"center\">\n        <Input\n          value={search}\n          placeholder={i18n('Search')}\n          onChange={onSearch} />\n      </div>\n\n      {results.length > 0 ?\n        <ResultList\n          results={results} \n          onSelect={onSelectResult} /> : <SearchInstructions /> }\n    </PageWithMenuDesktop>\n  )\n\n}\n\nexport default DesktopSearchPage;","import React, { useEffect, useRef } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { Map, CircleMarker, TileLayer } from 'react-leaflet';\nimport centroid from '@turf/centroid';\nimport L from 'leaflet';\n\nimport { overviewMapState } from '../store/State';\nimport PageWithMenu from '../PageWithMenu';\nimport { useI18N } from '../i18n';\nimport { hasGeometry, navigateTo } from '../profiles/Utils';\nimport Curve from './Curve';\n\nimport './OverviewMap.scss';\n\nconst drawArrow = (path, curveLayer, markerLayer, onClick) => {\n  const start = centroid(path.begins).geometry.coordinates.reverse();\n  const end = centroid(path.ends).geometry.coordinates.reverse();\n\n  const arrow = new Curve(\n    start, \n    end, \n    curveLayer, \n    markerLayer);\n\n  arrow.onClick(onClick);\n}\n\nconst getDistinctPaths = paths => {\n  const distinct =  {};\n\n  paths.forEach(p => {\n    // Path is defined by the URIs of its start & end\n    const key = `${p.begins['@id']}-${p.ends['@id']}`;\n    \n    // Keep only the last, so that we render only one arc\n    distinct[key] = p;\n  });\n\n  return Object.values(distinct);\n}\n\nconst OverviewMap = props => {\n\n  const i18n = useI18N();\n\n  const mapRef = useRef();\n\n  const [ mapState, setMapState ] = useRecoilState(overviewMapState);\n\n  const onClick = path =>\n    navigateTo(path.actor, props.navigator);\n\n  useEffect(() => {\n    if (mapRef.current) {\n      const map = mapRef.current.leafletElement;\n\n      // Restore map state or fit to initial bounds \n      if (mapState.center)\n        map.setView(mapState.center, mapState.zoom);\n      else\n        map.fitBounds(props.store.geoBounds);\n      \n      // \"Lifepath\" layers - show/hide depending on zoom level\n      const curveLayer = L.layerGroup(); \n      const markerLayer = L.layerGroup();\n\n      if (map.getZoom() < 13) {\n        map.addLayer(curveLayer);\n        map.addLayer(markerLayer);\n      }\n\n      getDistinctPaths(props.store.lifePaths)\n        .forEach(l => drawArrow(l, curveLayer, markerLayer, onClick(l)));\n\n      map.on('zoomend', function() {\n        const zoom = map.getZoom();\n        const center = map.getCenter();\n        setMapState({ zoom, center });\n\n        if (zoom > 12) {\n          // Remove lifepaths, unless hidden\n          if (map.hasLayer(curveLayer)) {\n            map.removeLayer(curveLayer);\n            map.removeLayer(markerLayer);\n          }\n        } else {\n          // Add lifepaths, unless shown\n          if (!map.hasLayer(curveLayer)) {\n            map.addLayer(curveLayer);\n            map.addLayer(markerLayer);\n          }\n        }\n      });\n\n      map.on('moveend', function() {\n        const zoom = map.getZoom();\n        const center = map.getCenter();\n        setMapState({ zoom, center });\n      });\n    }\n  }, []);\n\n  const placeStyle = {\n    stroke: props.isDesktop,\n    weigth: 2,\n    color: '#8a6100',\n    fillColor: '#8a6100',\n    fillOpacity: 0.75,\n    radius: props.isDesktop ? 5 : 12\n  }\n\n  const places = props.store.places.map(feature => {\n      if (hasGeometry(feature))\n        return {\n          feature,\n          centroid: centroid(feature.geometry).geometry.coordinates.slice().reverse()\n        }\n    })\n    .filter(lonLat => lonLat) // Remove unlocated\n    .map(({ feature, centroid}) =>\n      <CircleMarker \n        key={feature['@id']} \n        center={centroid} \n        onClick={navigateTo(feature, props.navigator)}\n        {...placeStyle} />\n    );\n\n  return (\n    <PageWithMenu \n      backButton\n      title=\"Map\"\n      className=\"overview-map\"\n      title={i18n('Map')}\n      {...props}>\n\n      <div className=\"overview-map-container\">\n        <Map \n          ref={mapRef}\n          zoom={10}\n          preferCanvas={true}\n          attributionControl={false}\n          style={{height:'100%'}}>\n          <TileLayer\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n          />\n\n          { places }\n\n        </Map>\n      </div>\n    </PageWithMenu>\n  )\n\n}\n\nexport default OverviewMap;","import React from 'react';\nimport PageWithMenu from '../PageWithMenu';\nimport { useLang } from '../i18n';\n\nconst DESCRIPTION_GERMAN = \n  <>\n    <p className=\"project-description\">\n      In diesem Forschungsprojekt wurden biographische Daten zu den orthodoxen \n      Wiener SerbInnen von 1741 bis 1918, und hier zu bedeutenden Persönlichkeiten \n      des politischen, sozialen, wirtschaftlichen, wissenschaftlichen und \n      kulturellen Lebens der Zeit, in den Wiener Archiven, zu ihren Wohnorten und \n      zu ihren Wirkungsst&auml;tten in Wien recherchiert. Die biographischen Abrisse und \n      Lokalisierungen von Wohnorten und Wirkungsstätten wurden in eine OpenAtlas \n      Datenbank eingegeben und sind online über das &quot;Digitale Geoportal der Geschichte \n      der Orthodoxen in &Ouml;sterreich&quot; für interessierte InternetnutzerInnen frei \n      abrufbar. Die Daten umfassen insgesamt 282 Personen und 256 Orte. Solch eine \n      Forschung ist für Wien unter anderem deshalb von großer Bedeutung, weil die \n      Spuren berühmter SerbInnen in Wien derzeit lediglich mit einigen wenigen \n      Gedenktafeln im &ouml;ffentlichen Raum dokumentiert sind. Mit Hilfe des Geoportals \n      k&ouml;nnen Stadtspazierg&auml;nge gezielt geplant und interessante, historische \n      Pl&auml;tze aufgesucht werden.\n    </p>\n    <table className=\"project-meta\">\n      <tbody>\n        <tr>\n          <td>Laufzeit des Projekts:</td>\n          <td>1. J&auml;nner 2018-30. Juni 2019</td>\n        </tr>\n\n        <tr>\n          <td>Gef&ouml;rdert von:</td>\n          <td>Magistratsabteilung (MA) 7 –Kultur, Wissenschafts-und Forschungsf&ouml;rderung der Stadt Wien für 2017</td>            \n        </tr>\n\n        <tr>\n          <td>Siehe dazu im Detail:</td>\n          <td>\n            <a href=\"https://orthodoxes-europa.at/projekte/Digitales-Geoportal-der-Geschichte-der-SerbInnen-in-Wien\">\n              Digitales Geoportal der Geschichte der SerbInnen in Wien\n            </a>\n          </td>\n        </tr>\n    </tbody>\n    </table>\n  </>\n\nconst DESCRIPTION_ENGLISH = \n  <>\n    <p className=\"project-description\">\n      In this project research on the biographies of the Orthodox Viennese Serbs from 1741 until 1918, \n      i.e. significant personalities of the political, social, economic, scientific and cultural life of \n      the time, was conducted in Viennese archives as well as on their places of residence and of work \n      in Vienna. The biographical data and the respective localisations of places of residence and of \n      work were embedded into an OpenAtlas database and may be accessed freely online by the general \n      public via the &quot;Digital Geoportal of the History of the Orthodox in Austria&quot;. The data \n      comprises 282 personalities and 256 places. Such research is of great importance for Vienna, amongst \n      others, because the traces of famous Serbs in Vienna are currently only documented with a few \n      memorial plaques in public space. Based on the Geoportal specific city walks can be planned and \n      interesting, historic places can be visited.  \n    </p>\n    <table className=\"project-meta\">\n      <tbody>\n        <tr>\n          <td>Duration of the Project:</td>\n          <td>1 January 2018-30 June 2019</td>\n        </tr>\n\n        <tr>\n          <td>Sponsored by:</td>\n          <td>Magistratsabteilung (MA) 7 –Kultur, Wissenschafts-und Forschungsförderung der Stadt Wien für 2017</td> \n        </tr>\n\n        <tr>\n          <td>Cf. in detail:</td>\n          <td>\n            <a href=\"https://orthodoxes-europa.at/projekte/Digitales-Geoportal-der-Geschichte-der-SerbInnen-in-Wien\">\n              Digitales Geoportal der Geschichte der SerbInnen in Wien\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </>\n\nconst PAGE_TITLE = {\n  'de': 'SerbInnen in Wien 1741-1918',\n  'en': 'Serbs in Vienna 1741-1918'\n}\n\nconst TEXT_TITLE = {\n  'de': 'Ein digitales Geoportal der Geschichte der SerbInnen in Wien (1741-1918)',\n  'en': 'A Digital Geoportal of the History of the Serbs in Vienna (1741-1918)'\n}\n\nconst DESCRIPTION = {\n  'de': DESCRIPTION_GERMAN,\n  'en': DESCRIPTION_ENGLISH\n}\n\nconst SerbsInVienna = props => {\n\n  const lang = useLang();\n\n  const content = \n    <div className=\"fill-height\">\n      <div className=\"page-container fill-height\">\n        <h1>{TEXT_TITLE[lang]}</h1>\n        <div>\n          {DESCRIPTION[lang]}\n        </div>\n      </div>\n      <footer>\n        <img src=\"images/wienkultur_logo_RGB.png\" alt=\"Logo Wien Kultur\"></img>\n      </footer>\n    </div>\n\n  return (\n    <PageWithMenu\n      backButton  \n      current=\"SerbsInVienna\"\n      title={PAGE_TITLE[lang]}\n      {...props}>\n\n      {content}\n\n    </PageWithMenu>\n  )\n\n}\n\nexport default SerbsInVienna;","import React from 'react';\nimport PageWithMenu from '../PageWithMenu';\nimport { useLang } from '../i18n';\n\nconst DESCRIPTION_GERMAN = \n  <>\n    <p className=\"project-description\">\n      In diesem Projekt beschäftigen wir uns mit dem schweren Los der Zivilbevölkerung im \n      Ersten Weltkrieg (1914-1918) und hier im besonderen mit der östlichen Front \n      Österreich-Ungarns in diesem weltumspannenden Konflikt. Mit dem Ausbruch des Ersten \n      Weltkriegs am 28. Juli 1914 gelang es der Armee des Zarenreichs Russland zunächst, in \n      der Bukowina und in Ostgalizien (d. h. im heutigen Polen, Rumänien und der Ukraine) tief auf\n      das Staatsgebiet Österreich-Ungarns einzudringen. Dies hatte zur Folge, dass die\n      dortige – zu einem beträchtlichen Teil orthodoxe – Bevölkerung floh/fliehen musste und \n      in der Folge in andere Teile der Monarchie evakuiert werden musste. Daraufhin begann die \n      Statthalterei von Niederösterreich (damals das Erzherzogtum Österreich unter der Enns), \n      zivile Flüchtlingslager – unter anderem in Oberhollabrunn – für die eigenen Staatsbürger \n      einzurichten.\n    </p>\n    <p className=\"project-description\">\n      Unser Forschungsprojekt verwendet unveröffentlichte Bestände des Archivs der griechisch-orthodoxen \n      Kirchengemeinde zur Heiligen Dreifaltigkeit in der Metropolis von Austria (1010 Wien). \n      Basierend auf 343 Totenbeschaubefunden zu den orthodoxen Flüchtlingen im Flüchtlingslager \n      Oberhollabrunn können wir nachvollziehen, wo die Verstorbenen geboren wurden, welchen Beruf sie \n      hatten, aus welchen Orten sie geflohen sind etc. Dadurch entsteht ein Bild ihrer Flucht und ihres \n      Schicksals vor unseren Augen. Dieses holen wir mit digitalen Karten und datenbankbasierten \n      Suchfunktionen aus der Vergessenheit und machen es der interessierten Öffentlichkeit zugänglich.\n    </p>\n    <p className=\"project-description\">\n      Wir danken dem Zukunftsfonds der Republik Österreich für die finanzielle Projektförderung,\n      der griechisch-orthodoxen Metropolis von Austria für die infrastrukturelle und \n      wissenschaftliche Unterstützung, dem Austrian Institute of Technology (AIT) für die technische \n      Zusammenarbeit und dem Stadtarchiv Hollabrunn für die archivische Beratung.\n    </p>\n    <table className=\"project-meta\">\n      <tbody>\n        <tr>\n          <td>Laufzeit des Projekts:</td>\n          <td>1. Juli 2020 bis 1. August 2021</td>\n        </tr>\n\n        <tr>\n          <td>Gefördert von:</td>\n          <td>Zukunftsfonds der Republik Österreich</td>            \n        </tr>\n\n        <tr>\n          <td>Siehe dazu im Detail:</td>\n          <td>\n            <a href=\"https://orthodoxes-europa.at/projekte/Flucht-Gefangenschaft-Neubeginn-und-Widerstand\">\n              Flucht, Gefangenschaft, Neubeginn und Widerstand\n            </a>\n          </td>\n        </tr>\n    </tbody>\n    </table>\n  </>\n\nconst DESCRIPTION_ENGLISH = \n  <>\n    <p className=\"project-description\">\n      In this project we deal with the severe fate of the civilian population in the First \n      World War (1914-1918) and in particular with the Eastern Front of Austria-Hungary in \n      this worldwide conflict. With the outbreak of the First World War on 28 July 1914, \n      the army of the Tsardom of Russia first succeeded in penetrating deeply into the \n      territory of Austria-Hungary in Bukovina and in Eastern Galicia (i.e. in today's \n      Poland, Romania and Ukraine). As a result, the local population – to a considerable \n      extent Orthodox – fled/had to flee and had to be evacuated to other parts of the \n      Austro-Hungarian Monarchy. As a result, the governorship of Lower Austria (then the \n      Archduchy of Austria below the River Enns) began to set up civilian refugee \n      camps – amongst others in Oberhollabrunn – for their own citizens.\n    </p>\n    <p className=\"project-description\">\n      Our research project uses unpublished holdings of the archive of the Greek-Orthodox \n      parish of the Holy Trinity in the Metropolis of Austria (1010 Vienna). Based on 343 \n      post mortem examinations of the Orthodox refugees in the refugee camp Oberhollabrunn, \n      we can trace where the deceased were born, what profession they had, from which places \n      they fled, etc. This creates a vivid picture of their flight and their subsequent \n      fate before our eyes. By means of digital maps and database-related search \n      functions we bring this picture out of oblivion and make it accessible to the \n      interested public.  \n    </p>\n    <p className=\"project-description\">\n      We are grateful to the Future Fund of the Republic of Austria for the funding of the project, \n      the Greek-Orthodox Metropolis of Austria for the infrastructural and scholarly support, \n      the Austrian Institute of Technology (AIT) for the technical cooperation and the Municipal \n      Archive Hollabrunn for the archival assistance.\n    </p>\n    <table className=\"project-meta\">\n      <tbody>\n        <tr>\n          <td>Duration of the Project:</td>\n          <td>1 July 2020-1 August 2021</td>\n        </tr>\n\n        <tr>\n          <td>Sponsored by:</td>\n          <td>Zukunftsfonds der Republik Österreich</td> \n        </tr>\n\n        <tr>\n          <td>Cf. in detail:</td>\n          <td>\n            <a href=\"https://orthodoxes-europa.at/projekte/Flucht-Gefangenschaft-Neubeginn-und-Widerstand\">\n              Flucht, Gefangenschaft, Neubeginn und Widerstand\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </>\n\nconst PAGE_TITLE = {\n  'de': 'Auf der Flucht in der Monarchie',\n  'en': 'On the Run in the Austro-Hungarian Monarchy'\n}\n\nconst TEXT_TITLE = {\n  'de': 'Auf der Flucht in der Monarchie – das Schicksal der orthodoxen Flüchtlinge im Lager Oberhollabrunn (1914-1918)',\n  'en': 'On the Run in the Austro-Hungarian Monarchy – the Fate of Orthodox Refugees in the Camp Oberhollabrunn (1914-1918)'\n}\n\nconst DESCRIPTION = {\n  'de': DESCRIPTION_GERMAN,\n  'en': DESCRIPTION_ENGLISH\n}\n\nconst CampOberhollabrunn = props => {\n\n  const lang = useLang();\n\n  const content = \n    <div className=\"fill-height\">\n      <div className=\"page-container fill-height\">\n        <h1>{TEXT_TITLE[lang]}</h1>\n        <div>\n          {DESCRIPTION[lang]}\n        </div>\n      </div>\n      <footer>\n        <img src=\"images/zf_logo.png\" alt=\"Logo Zukunftsfonds der Republik Österreich\"></img>\n      </footer>\n    </div>\n\n  return (\n    <PageWithMenu\n      backButton\n      current=\"CampOberhollabrunn\"\n      title={PAGE_TITLE[lang]}\n      {...props}>\n      {content}\n    </PageWithMenu>\n  )\n\n}\n\nexport default CampOberhollabrunn;","import React from 'react';\nimport { Button, Icon } from 'react-onsenui';\nimport { useI18N, useBilingual } from '../i18n';\nimport { SPLASH_MESSAGE } from './SplashPageMobile';\nimport PageWithMenuDesktop from '../PageWithMenuDesktop';\n\nimport SearchPageDeskop from '../search/SearchPageDesktop';\nimport OverviewMap from '../map/OverviewMap';\nimport SerbsInVienna from '../projects/SerbsInVienna';\nimport CampOberhollabrunn from '../projects/CampOberhollabrunn';\n\nconst SplashPageDesktop = props => {\n\n  const i18n = useI18N();\n\n  const getTranslation = useBilingual();\n\n  const goTo = component => () =>\n    props.navigator.pushPage({ component });\n\n  return (\n    <PageWithMenuDesktop \n      className=\"splashpage\"\n      current=\"SplashPage\"\n      navigator={props.navigator}>\n      \n      <div className=\"splash-page-container\">\n        <div className=\"splash-image-container\">\n          <img className=\"splash-image\" src=\"images/OrthodoxyInEurope.png\" alt=\"Orthodoxy in Europe - Map\" />\n\n          <div className=\"splash-message\">\n            <h1>\n              {i18n('Digital Geoportal of the History of the Orthodox in Austria')}\n            </h1>\n            <p>\n              {getTranslation(SPLASH_MESSAGE)}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"buttons\">\n          <Button onClick={goTo(OverviewMap)}>\n            <Icon icon=\"md-globe\" />\n            <label>{i18n('Map')}</label>\n          </Button>\n          <Button onClick={goTo(SearchPageDeskop)}>\n            <Icon icon=\"md-search\" />\n            <label>{i18n('Search')}</label>\n          </Button>\n        </div>\n\n        <div className=\"content\">\n          <div className=\"projects\">\n            <h2>{i18n('Projects')}</h2>\n            <ol>\n              <li>\n                <Button modifier=\"large--quiet\" onClick={goTo(SerbsInVienna)}>\n                  {i18n('Serbs in Vienna 1741-1918')}\n                </Button>\n              </li>\n              \n              <li>\n                <Button modifier=\"large--quiet\" onClick={goTo(CampOberhollabrunn)}>\n                  {i18n('Orthodox Refugees in Hollabrunn 1914-1918')}\n                </Button>\n              </li>\n            </ol>\n          </div>\n        </div>\n\n        <footer>\n          <strong>{i18n('Imprint')}</strong><br/>\n          Digitales Geoportal der Geschichte der Orthodoxen in Österreich<br/>\n          Vertreten durch:<br/>\n          Priv.-Doz. Mag. Dr. Mihailo Popović, Projektleiter<br/>\n          Kiningergasse 12/2/7<br/>\n          1120 Wien<br/>\n          Österreich<br/>\n          <a href=\"mailto:mihailop@hotmail.com\">mihailop@hotmail.com</a>\n        </footer>\n      </div>\n    </PageWithMenuDesktop>\n  )\n\n}\n\nexport default SplashPageDesktop;","import React from 'react';\nimport PageWithMenu from '../PageWithMenu';\nimport { useLang } from '../i18n';\n\nimport './Help.scss';\n\nconst de = \n  <>\n    <p>\n      Sie können die Datenbank entweder mit Hilfe \n      der <span>Suchfunktion</span> oder der <span>Überblickskarte</span> durchsuchen.\n    </p>\n\n    <p>\n      Tippen sie das Zurück-Icon oder die Rücktaste ihres \n      Gerätes um zur vorherigen Seite zu zurückzukehren. \n    </p>\n\n    <p>\n      Benutzen sie das Hauptmenü um zur Startseite, zur Suche,\n      oder zu den Projektinformations-Seiten zu navigieren, oder\n      um die Spracheinstellung zwischen Englisch und Deutsch \n      umzuschalten.\n    </p>\n\n    <h1>App-Information</h1>\n    <p>\n      Diese Anwendung nutzt u.A. die folgenden Open Source Softwarebibliotheken und Datenquellen: \n    </p>\n    <ul>\n      <li><a href=\"https://leafletjs.com/\" target=\"_blank\" rel=\"noreferrer\">Leaflet</a></li>\n      <li>\n        Kartendaten von <a href=\"https://developers.arcgis.com/\" target=\"_blank\" rel=\"noreferrer\">ESRI ArcGIS online</a>. \n        Source: Esri, Maxar, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community.\n      </li>\n    </ul>\n  </>\n\nconst en = \n  <>\n    <p>\n      You can explore the database either through \n      the <span>Search</span> function, or the <span>Overview Map</span>.\n    </p>\n\n    <p>\n      Tap the Back icon or your device back button to return to\n      the previous page. \n    </p>\n\n    <p>\n      Use the main menu to go back to the start page, to the search,\n      or the project information pages, or to toggle the language \n      setting between English and German.\n    </p>\n\n    <h1>App Information</h1>\n    <p>\n      This application makes use of the following open source software libraries and \n      data sources:\n    </p>\n    <ul>\n      <li><a href=\"https://leafletjs.com/\" target=\"_blank\" rel=\"noreferrer\">Leaflet</a></li>\n      <li>\n        Map data from <a href=\"https://developers.arcgis.com/\" target=\"_blank\" rel=\"noreferrer\">ESRI ArcGIS online</a>. \n        Source: Esri, Maxar, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community.\n      </li>\n    </ul>\n  </>\n\nconst TITLE = {\n  'de': 'Hilfe',\n  'en': 'Help'\n}\n\nconst CONTENT = { de, en }\n\nconst Help = props => {\n\n  const lang = useLang();\n\n  return (\n    <PageWithMenu\n      backButton\n      className=\"app-help\"\n      title={TITLE[lang]}\n      current=\"Help\"\n      {...props}>\n        \n      <div className=\"page-container\">\n        {CONTENT[lang]}\n      </div>\n\n    </PageWithMenu>\n  )\n\n}\n\nexport default Help;","import axios from 'axios';\nimport bbox from '@turf/bbox';\nimport distance from '@turf/distance';\nimport centroid from '@turf/centroid';\n\nexport const getBounds = geojson => {\n  const corners = bbox(geojson);\n  return [\n    [ corners[1], corners[0] ],\n    [ corners[3], corners[2] ]\n  ];\n}\n\nconst buildWaypointFeatures = (waypoints, store) => ({\n  type: 'FeatureCollection',\n  features: waypoints.map(waypoint => {\n    const record = store.findById(waypoint.id);\n    const latlon = centroid(record.geometry);\n    const hasValidGeometry = latlon.geometry.coordinates.every(coord => !isNaN(coord));\n\n    return hasValidGeometry && record.description && {\n      type: 'Feature',\n      properties: {\n        title: record.properties.title.replace('Oberhollabrunn, Flüchtlingslager,', '').trim(),\n        images: record.depictions,\n        description: record.description.map(d => d.value).join('\\n\\n'),\n        viewpoint: waypoint.lonlat.slice().reverse()\n      },\n      geometry: record.geometry\n    }\n  }).filter(f => f)\n})\n\nclass Tour {\n\n  load(tour, store) {\n    return Promise.all([\n      axios.get(`tours/${tour}-track.json`),\n      axios.get(`tours/${tour}-waypoints.json`)\n    ]).then(results => {\n      this.track = results[0].data;\n      \n      // Allow GeoJSON feature collection or DB ID list\n      this.waypoints = results[1].data.type === 'FeatureCollection' ?\n        results[1].data : buildWaypointFeatures(results[1].data, store);\n\n      this.bounds = getBounds(this.track);\n    });\n  }\n\n  getProp(name) {\n    return this.track.features[0].properties[name];\n  }\n\n  getDescription(language) {\n    return language === 'en' ?\n      this.getProp('description_en') : this.getProp('description_de');\n  }\n\n  get duration() {\n    return this.getProp('duration_minutes');\n  }\n\n  get image() {\n    return this.getProp('image');\n  }\n\n  get title() {\n    return this.getProp('title');\n  }\n\n  getNearestWaypoint = pos => {\n    if (pos) {\n      const currentPos = {\n        type: 'Feature',\n        properties: {},\n        geometry: {\n          type: 'Point',\n          coordinates: [ pos.coords.longitude, pos.coords.latitude ]\n        }\n      };\n\n      const distances = this.waypoints.features.map(f => distance(currentPos, f));\n      const minDistance = Math.min.apply(null, distances);\n\n      return this.waypoints.features[distances.indexOf(minDistance)];\n    }\n  }\n\n}\n\n/** Instantiate a tour object, return the promise, and map result to the tour itself **/\nexport const loadTour = (name, store) => {\n  const tour = new Tour();\n  return tour.load(name, store).then(() => tour);\n}\n\nexport const loadJourney = name =>\n  axios.get(`tours/${name}-journey.json`)\n    .then(response => response.data);","import React, { useState } from 'react';\nimport SideMenu from './SideMenu';\nimport { \n  BackButton,\n  Icon, \n  Page, \n  Splitter, \n  SplitterContent, \n  SplitterSide, \n  Toolbar, \n  ToolbarButton \n} from 'react-onsenui';\n\nconst PageWithMenuMobile = props => {\n\n  const [ isMenuOpen, setMenuOpen ] = useState(false);\n\n  const onBackButton = () => {\n    props.navigator.popPage();\n  }\n\n  return (\n    <Page className={props.className}>\n      <Splitter>\n        <SplitterContent>\n          <Page \n            onDeviceBackButton={onBackButton}\n            renderToolbar={() => \n              <Toolbar>\n                { props.backButton &&\n                  <BackButton />\n                }\n                <div className=\"center\">\n                  { props.title }\n                </div>\n                <div className=\"right\">\n                  <ToolbarButton onClick={() => setMenuOpen(true)}>\n                    <Icon icon=\"md-menu\" />\n                  </ToolbarButton>\n                </div>\n              </Toolbar>\n            }>\n\n            { props.children }\n\n          </Page>\n        </SplitterContent>\n        <SplitterSide\n          animation=\"overlay\"\n          mode=\"collapse\"\n          side=\"right\"\n          collapse={true}\n          width=\"300px\"\n          isOpen={isMenuOpen}\n          onClose={() => setMenuOpen(false)}>\n\n          <SideMenu \n            navigator={props.navigator} \n            onClose={() => setMenuOpen(false)} />\n\n        </SplitterSide>\n      </Splitter>\n    </Page>\n  )\n\n}\n\nexport default PageWithMenuMobile;","import React from 'react';\nimport { CircleMarker, LayerGroup } from 'react-leaflet';\n\nconst OUTER_STYLE = {\n  radius: 32,\n  weight: 1,\n  color: '#739cff',\n  fillColor: '#004aff',\n  fillOpacity: 0.3\n}\n\nconst INNER_STYLE = {\n  radius: 5,\n  stroke: false,\n  fillOpacity: 1,\n  fillColor: '#004aff'\n}\n\nconst MyPosition = props => {\n\n  const { latitude, longitude } = props.pos.coords;\n\n  const center = [ latitude, longitude ];\n\n  return (\n    <LayerGroup>\n      <CircleMarker \n        {...{ ...OUTER_STYLE, center }} />\n\n      <CircleMarker\n        {...{ ...INNER_STYLE, center }} />\n    </LayerGroup>\n  )\n\n}\n\nexport default MyPosition;","import React from 'react';\nimport { CircleMarker, GeoJSON, LayerGroup, Pane } from 'react-leaflet';\n\nconst OUTER_STYLE = {\n  radius: 12,\n  weight: 2,\n  color: '#000',\n  fillColor: '#fff',\n  fillOpacity: 1\n}\n\nconst INNER_STYLE = {\n  radius: 4,\n  stroke: false,\n  fillOpacity: 1,\n  fillColor: '#000'\n}\n\nconst NextStop = props => {\n\n  const { viewpoint } = props.waypoint.properties;\n\n  return (\n    <>\n      <Pane style={{ zIndex: 99999 }}>\n        <LayerGroup>\n          <CircleMarker \n            {...{ ...OUTER_STYLE, center: viewpoint }} />\n\n          <CircleMarker\n            {...{ ...INNER_STYLE, center: viewpoint }} />\n        </LayerGroup>\n      </Pane>\n\n      <Pane style={{ zIndex: 99998 }}>\n        <GeoJSON key={JSON.stringify(props.waypoint.geometry.coordinates)} data={props.waypoint} />\n      </Pane>\n    </>\n  )\n\n}\n\nexport default NextStop;","import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Icon } from 'react-onsenui';\nimport distance from '@turf/distance';\nimport { CSSTransition } from 'react-transition-group';\nimport { useI18N, useBilingual } from '../../i18n';\nimport ImageGroup from '../../ImageGroup';\n\nimport './InfoPanel.scss';\n\nconst InfoPanel = props => {\n\n  const main = useRef();\n\n  const [ expanded, setExpanded ] = useState(false);\n\n  const [ zoomHeaderImage, setZoomHeaderImage ] = useState(false);\n\n  const i18n = useI18N();\n\n  const getTranslation = useBilingual();\n  \n  // turf.js needs GeoJSON feature\n  const currentPos = props.pos ? {\n    type: 'Feature',\n    properties: {},\n    geometry: {\n      type: 'Point',\n      coordinates: [ props.pos.coords.longitude, props.pos.coords.latitude ]\n    }\n  } : null;\n\n  const next = {\n    type: 'Feature',\n    properties: {},\n    geometry: {\n      type: 'Point',\n      coordinates: props.waypoint.properties.viewpoint\n    }\n  }\n\n  const dist = currentPos ? Math.round(distance(currentPos, next) * 1000) : null;\n  \n  const proximity = props.useGPS ? (dist !== null && dist < 25 ? 'ARRIVED' : 'FAR') : 'NO-GPS';\n\n  useEffect(() => {\n    if (main.current)\n      main.current.scrollTop = 0;\n  }, [ props.waypoint ])\n\n  useEffect(() => {\n    // If proximity changes to 'ARRIVED', buzz & expand panel\n    if (proximity === 'ARRIVED') {\n      window.navigator.vibrate(200);\n      setExpanded(true);\n    }\n  }, [ proximity ])\n\n  const onNextWaypoint = () => {\n    if (props.useGPS)\n      setExpanded(false);\n    \n      props.onNextWaypoint();\n  }\n\n  const onPreviousWaypoint = () => {\n    if (props.useGPS)\n      setExpanded(false);\n    \n      props.onPreviousWaypoint();\n  }\n\n  const headerImage = props.waypoint.properties.images && \n    (props.waypoint.properties.images[0].url.startsWith('http') ? \n      `${props.waypoint.properties.images[0].url}?image_size=webview` :\n        `tours/images/${props.waypoint.properties.images[0].url}`);\n\n  const toParagraphs = description =>\n    description.split(/(\\r|\\n)+/g).filter(para => para.trim());\n\n  return (\n    <CSSTransition in={expanded} timeout={200}>\n      <div className=\"tour-map-infopanel\">\n        <div className={`next-stop ${proximity}`}>\n          {proximity === 'FAR' &&\n            <h1>\n              { \n                props.isStart ? i18n('First Stop') : (\n                  props.isEnd ? i18n('Last Stop') : i18n('Next Stop')\n                )\n              }\n            </h1>\n          }\n\n          {proximity === 'ARRIVED' &&\n            <h1>{i18n('You have arrived!')}</h1> }\n\n          {proximity === 'NO-GPS' &&\n            <h1>\n              { \n                props.isStart ? i18n('First Stop') : (\n                  props.isEnd ? i18n('Last Stop') : `${i18n('Stop')} ${props.waypointIdx + 1}`\n                )\n              }\n            </h1>\n          }\n\n          <h2>\n            {proximity === 'FAR' &&\n              <span className=\"distance\"><Icon icon=\"md-walk\" /> {dist || '-'}m </span> }\n\n            {props.waypoint.properties.title}\n          </h2>\n\n          <button \n            className=\"expand\"\n            onClick={() => setExpanded(!expanded)}>\n            <Icon icon=\"md-chevron-right\" /> \n          </button>\n        </div>\n        \n        <main ref={main}>\n          <div \n            className=\"waypoint-image\"\n            style={{ backgroundImage: `url('${headerImage}')` }}\n            onClick={() => setZoomHeaderImage(true)}>\n          </div>\n\n          <div className=\"waypoint-description\">\n            {toParagraphs(getTranslation(props.waypoint.properties.description)).map((p, idx) => \n              <p key={idx}>{p}</p>\n            )}\n            \n            <ImageGroup \n              open={zoomHeaderImage}\n              hideFirst\n              depictions={props.waypoint.properties.images} \n              onClose={() => setZoomHeaderImage(false) } />\n\n            <div className=\"buttons\">\n              {props.isEnd ?\n                <>\n                  <p><strong>{i18n('You have reached the end of our tour.')}</strong></p>\n                  <Button\n                    className=\"go-back\" \n                    onClick={props.onReturn}>\n                    {i18n('Back')}\n                  </Button>\n                </> :\n\n                <Button \n                  className=\"next-waypoint\" \n                  onClick={onNextWaypoint}>\n\n                  <Icon icon=\"md-walk\" /> {i18n('Continue to Next Stop')}\n                </Button>\n              }\n\n              {!props.isStart &&\n                <button \n                  className=\"prev-waypoint\"\n                  onClick={onPreviousWaypoint}>{i18n('Back to previous stop')}</button>\n              }\n            </div>\n\n            <div className=\"shade-gradient\" />\n          </div>\n        </main>\n      </div>\n    </CSSTransition>\n  ) \n\n}\n\nexport default InfoPanel;","import React, { useEffect, useRef, useState } from 'react';\nimport { GeoJSON, Map, TileLayer } from 'react-leaflet';\nimport PageWithMenu from '../../PageWithMenu';\nimport MyPosition from '../map/MyPosition';\nimport NextStop from '../map/NextStop';\nimport InfoPanel from './InfoPanel';\n\nimport './WaypointPage.scss';\n\nconst PATH_STYLE = {\n  color: '#000',\n  dashArray: '6 6'\n}\n\nconst WaypointPage = props => {\n\n  const [ waypoint, setWaypoint ] = useState(props.tour.waypoints.features[0]);\n\n  const [ pos, setPos ] = useState();\n\n  const mapRef = useRef();\n\n  const currentIdx = props.tour.waypoints.features.indexOf(waypoint);\n\n  const fitBounds = () => {\n    if (mapRef.current) {\n      const map = mapRef.current.leafletElement;\n\n      let bounds = null;\n\n      if (props.useGPS && pos) {\n        // When using GPS, fit map to waypoint + current location\n        const lons = [ pos.coords.longitude, waypoint.properties.viewpoint[1] ];\n        const lats = [ pos.coords.latitude, waypoint.properties.viewpoint[0] ];\n\n        bounds = [\n          [ Math.min(...lats), Math.min(...lons) ],\n          [ Math.max(...lats), Math.max(...lons) ]\n        ];\n      } else {\n        // When not using GPS, just fit to tour path\n        bounds = props.tour.bounds;\n      }\n\n      map.fitBounds(bounds, { \n        paddingTopLeft: [ 15, 15 ],\n        paddingBottomRight: [ 10, window.innerHeight  / 2 ]\n      });\n    }\n  }\n\n  useEffect(() => {\n    fitBounds();\n    \n    if (props.useGPS) {\n      const watchId = navigator.geolocation?.watchPosition(pos => {\n        setPos(pos);\n      }, null, { enableHighAccuracy: true });\n\n      return function cleanup() {\n        navigator.geolocation?.clearWatch(watchId);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    fitBounds();\n  }, [ waypoint ]);\n\n  const onNextWaypoint = () => {\n    const nextIdx = Math.min(currentIdx + 1, props.tour.waypoints.features.length - 1);\n    setWaypoint(props.tour.waypoints.features[nextIdx]);\n  }\n\n  const onPrevWaypoint = () => {\n    const prevIdx = Math.max(0, currentIdx - 1);\n    setWaypoint(props.tour.waypoints.features[prevIdx]);\n  }\n\n  const onReturn = () =>\n    props.navigator.popPage();\n\n  return (\n    <PageWithMenu \n      backButton\n      className=\"tour-gps\"\n      title={props.tour.title}\n      navigator={props.navigator}>\n\n      <Map \n        ref={mapRef}\n        zoomControl={false}\n        attributionControl={false}>\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n        <GeoJSON { ...{...PATH_STYLE, data: props.tour.track }} />\n        \n        { pos && <MyPosition pos={pos} /> }\n\n        <NextStop waypoint={waypoint} />\n      </Map>\n\n      <InfoPanel \n        tour={props.tour} \n        useGPS={props.useGPS}\n        waypoint={waypoint} \n        waypointIdx={currentIdx}\n        pos={pos} \n        isStart={currentIdx === 0}\n        isEnd={currentIdx === props.tour.waypoints.features.length - 1}\n        onNextWaypoint={onNextWaypoint}\n        onPreviousWaypoint={onPrevWaypoint}\n        onReturn={onReturn} />\n    </PageWithMenu>\n  )\n\n}\n\nexport default WaypointPage;","import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Icon, Modal } from 'react-onsenui';\nimport { GeoJSON, Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { useI18N , useLang } from '../../i18n';\nimport { loadTour, loadJourney, getBounds } from '../Tour';\nimport PageWithMenuMobile from '../../PageWithMenuMobile';\nimport WaypointPage from '../mobile/WaypointPage';\nimport L from 'leaflet';\n\nimport './StartPage.scss';\n\nconst JOURNEY_STYLE = feature => ({\n  color: feature.properties.color,\n  weight: 4,\n  dashArray: '2 6'\n});\n\nconst POIIcon = feature => {\n  const color = feature.properties.color || 'blue';\n  const icon = feature.properties.icon || 'flat';\n\n  return L.icon({\n    iconUrl: `images/leaflet/marker-${icon}-${color}.png`,\n    iconRetinaUrl: `images/leaflet/marker-${icon}-${color}-2x.png`,\n    shadowUrl: 'images/leaflet/marker-shadow.png',\n    shadowRetinaUrl: 'images/leaflet/marker-shadow-2x.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [0, -43],\n    shadowSize: [25, 41],\n    shadowAnchor: [12, 41]\n  });\n}\n\nconst TourStartPage = props => {\n\n  const i18n = useI18N();\n\n  const lang = useLang();\n\n  const mapRef = useRef();\n\n  const fullscreenMapRef = useRef();\n\n  const [ tour, setTour ] = useState();\n\n  const [ journey, setJourney ] = useState();\n\n  const [ isJourneyFullscreen, setJourneyFullscreen ] = useState(false);\n\n  useEffect(() => {\n    if (mapRef.current && journey) {\n      const map = mapRef.current.leafletElement;\n      map.fitBounds(getBounds(journey), { padding: [ 15, 15 ]});\n    }\n  }, [ journey ]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (fullscreenMapRef.current) {\n        const map = fullscreenMapRef.current.leafletElement;\n        map.fitBounds(getBounds(journey), { padding: [ 15, 15 ]});\n      }\n    });\n  }, [ isJourneyFullscreen ]);\n\n  useEffect(() => {\n    loadTour('oberhollabrunn', props.store).then(setTour);\n    loadJourney('oberhollabrunn').then(setJourney);\n  }, []);\n\n  const onStartTour = (tour, useGPS) => () =>\n    props.navigator.pushPage({ \n      component: WaypointPage,\n      tour,\n      useGPS\n    });\n\n  const journeyPath = journey && {\n    type: 'FeatureCollection',\n    features: journey.features.filter(f => f.geometry.type !== 'Point')\n  }\n\n  const journeyPOIs = journey && journey.features\n    .filter(f => f.geometry.type === 'Point')\n    .map((f, idx) => \n      <Marker\n        key={idx}\n        position={f.geometry.coordinates.slice().reverse()}\n        icon={POIIcon(f)}>\n        <Popup>{f.properties.name}</Popup>\n      </Marker>);\n\n  return (\n    <PageWithMenuMobile\n      backButton\n      className=\"tour-startpage\"\n      title={i18n('GPS Walking Tours')}\n      {...props}>\n\n      { tour && journey && \n        <>\n          <div className=\"tour-start-header-image\">\n            <img src={tour.image} alt=\"GPS walk header decoration\" />\n            <div className=\"caption\">\n              <h1>{tour.title}</h1>\n              <h3 className=\"duration\">\n                <Icon icon=\"md-time\" /> ca. {tour.duration} {i18n('Minutes')}\n              </h3>\n            </div>\n          </div>\n\n          <div className=\"tour-description\" dangerouslySetInnerHTML={{\n            __html: tour.getDescription(lang)\n          }} />\n\n          <div\n            className=\"tour-overview-map\">\n            <button \n              className=\"toggle-fullscreen\"\n              onClick={() => setJourneyFullscreen(!isJourneyFullscreen)}>\n              <Icon icon=\"md-fullscreen\" />\n            </button>\n\n            <Map \n              ref={mapRef}\n              zoomControl={false}\n              attributionControl={false}\n              style={{height:'100%'}}>\n              <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n              <GeoJSON data={journeyPath} style={JOURNEY_STYLE} />\n              {journeyPOIs}\n            </Map>\n          </div>\n\n          {isJourneyFullscreen && \n            <Modal isOpen={true}>\n              <div className=\"tour-overview-map fullscreen\">\n                <button \n                  className=\"toggle-fullscreen\"\n                  onClick={() => setJourneyFullscreen(!isJourneyFullscreen)}>\n                  <Icon icon=\"md-fullscreen\" />\n                </button>\n\n                <Map \n                  ref={fullscreenMapRef}\n                  zoomControl={false}\n                  attributionControl={false}\n                  style={{height:'100%'}}>\n                  <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n                  <GeoJSON data={journeyPath} style={JOURNEY_STYLE} />\n                  {journeyPOIs}\n                </Map>\n              </div>\n            </Modal>}\n\n          <div className=\"start-buttons\">\n            <Button onClick={onStartTour(tour, true)}>\n              <Icon icon=\"md-gps-dot\" /> <label>{i18n('Start the tour')}</label>\n            </Button>\n\n            <Button onClick={onStartTour(tour, false)} modifier=\"outline\" className=\"outline\">\n              <Icon icon=\"md-gps-off\" /> <label>{i18n('View tour without GPS')}</label>\n            </Button>\n          </div>\n        </>\n      }\n    </PageWithMenuMobile>\n  )\n\n}\n\nexport default TourStartPage;","import React, { useEffect, useRef, useState } from 'react';\nimport { Button, Icon } from 'react-onsenui';\nimport { GeoJSON, Map, TileLayer } from 'react-leaflet';\nimport NextStop from '../map/NextStop';\nimport { useI18N, useBilingual } from '../../i18n';\nimport PageWithMenuDesktop from '../../PageWithMenuDesktop';\nimport ImageGroup from '../../ImageGroup';\n\nimport './WaypointPage.scss';\n\nconst PATH_STYLE = {\n  color: '#000',\n  dashArray: '6 6'\n}\n\nconst WaypointPage = props => {\n\n  const [ waypoint, setWaypoint ] = useState(props.tour.waypoints.features[0]);\n  \n  const i18n = useI18N();\n\n  const mapRef = useRef();\n\n  const getTranslation = useBilingual();\n\n  useEffect(() => {\n    if (mapRef.current && props.tour) {\n      const map = mapRef.current.leafletElement;\n      map.fitBounds(props.tour.bounds, { padding: [ 15, 15 ]});\n    }\n  }, [ props.tour ]);\n\n  const currentIdx = props.tour.waypoints.features.indexOf(waypoint);\n  const isStart = currentIdx === 0;\n  const isEnd = currentIdx === props.tour.waypoints.features.length - 1;\n\n  const onNextWaypoint = () => {\n    const nextIdx = Math.min(currentIdx + 1, props.tour.waypoints.features.length - 1);\n    setWaypoint(props.tour.waypoints.features[nextIdx]);\n  }\n\n  const onPrevWaypoint = () => {\n    const prevIdx = Math.max(0, currentIdx - 1);\n    setWaypoint(props.tour.waypoints.features[prevIdx]);\n  }\n\n  return (\n    <PageWithMenuDesktop\n      className=\"tour-desktop\"\n      title={i18n('Walking Tour')}\n      {...props}>\n\n      <div className=\"map-container\">\n        <Map \n          ref={mapRef}\n          zoomControl={false}\n          attributionControl={false}>\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n          <GeoJSON { ...{...PATH_STYLE, data: props.tour.track }} /> \n          <NextStop waypoint={waypoint} />\n        </Map>\n\n        <div className=\"buttons map\">\n          {!isStart &&\n            <span>\n              <Button className=\"prev-stop\" onClick={onPrevWaypoint}>\n                <Icon icon=\"md-chevron-left\" />\n              </Button>\n            </span>\n          }\n\n          {!isEnd &&\n            <span>          \n              <Button className=\"next-stop\" onClick={onNextWaypoint}>\n                <Icon icon=\"md-chevron-right\" />\n              </Button>\n            </span>\n          }\n        </div>\n      </div>\n\n      <div className=\"waypoint-description\">\n        <h1>\n          { \n            isStart ? i18n('First Stop') : (\n              isEnd ? i18n('Last Stop') : `${i18n('Stop')} ${currentIdx + 1}`\n            )\n          }\n        </h1>\n\n        <h2>{waypoint.properties.title}</h2>\n\n        <p>\n          {getTranslation(waypoint.properties.description).replace('\\n', '\\n\\n')}\n        </p>\n\n        <ImageGroup depictions={waypoint.properties.images} />\n\n        <div className=\"buttons\">\n          {isEnd ?\n            <>\n              <p><strong>{i18n('You have reached the end of our tour.')}</strong></p>\n            </> :\n\n            <Button \n              className=\"next-waypoint\" \n              onClick={onNextWaypoint}>\n\n              <Icon icon=\"md-walk\" /> {i18n('Continue to Next Stop')}\n            </Button>\n          }\n\n          {!isStart &&\n            <button \n              className=\"prev-waypoint\"\n              onClick={onPrevWaypoint}>{i18n('Back to previous stop')}</button>\n          }\n        </div>\n      </div>\n\n    </PageWithMenuDesktop>\n  )\n\n}\n\nexport default WaypointPage;","import React, { useEffect, useRef, useState } from 'react';\nimport { GeoJSON, Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { Button, Icon } from 'react-onsenui';\nimport { useI18N, useLang } from '../../i18n';\nimport { loadTour, loadJourney, getBounds } from '../Tour';\nimport PageWithMenuDesktop from '../../PageWithMenuDesktop';\nimport WaypointPage from './WaypointPage';\nimport L from 'leaflet';\n\nimport './StartPage.scss';\n\nconst JOURNEY_STYLE = feature => ({\n  color: feature.properties.color,\n  weight: 5,\n  dashArray: '8 8'\n});\n\nconst POIIcon = feature => {\n  const color = feature.properties.color || 'blue';\n  const icon = feature.properties.icon || 'flat';\n\n  return L.icon({\n    iconUrl: `images/leaflet/marker-${icon}-${color}.png`,\n    iconRetinaUrl: `images/leaflet/marker-${icon}-${color}-2x.png`,\n    shadowUrl: 'images/leaflet/marker-shadow.png',\n    shadowRetinaUrl: 'images/leaflet/marker-shadow-2x.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [0, -43],\n    shadowSize: [25, 41],\n    shadowAnchor: [12, 41]\n  });\n}\n\nconst StartPage = props => {\n\n  const i18n = useI18N();\n\n  const language = useLang();\n\n  const mapRef = useRef();\n\n  const [ tour, setTour ] = useState();\n\n  const [ journey, setJourney ] = useState();\n\n  useEffect(() => {\n    if (mapRef.current && journey) {\n      const map = mapRef.current.leafletElement;\n      map.fitBounds(getBounds(journey), { padding: [ 15, 15 ]});\n    }\n  }, [ journey ]);\n\n  useEffect(() => {\n    loadTour('oberhollabrunn', props.store).then(setTour);\n    loadJourney('oberhollabrunn').then(setJourney);\n  }, []);\n\n  const onStartTour = tour => () =>\n    props.navigator.pushPage({ component: WaypointPage, tour });\n\n  const journeyPath = journey && {\n    type: 'FeatureCollection',\n    features: journey.features.filter(f => f.geometry.type !== 'Point')\n  }\n\n  const journeyPOIs = journey && journey.features\n    .filter(f => f.geometry.type === 'Point')\n    .map((f, idx) => \n      <Marker\n        key={idx}\n        position={f.geometry.coordinates.slice().reverse()}\n        icon={POIIcon(f)}>\n        <Popup>{f.properties.name}</Popup>\n      </Marker>);\n\n  return (\n    <PageWithMenuDesktop\n      className=\"tour-startpage-desktop\"\n      title={i18n('Walking Tour')}\n      current=\"Tour\"\n      {...props}>\n\n      {tour && journey &&\n        <>\n          <div className=\"tour-desktop-header\">\n            <div className=\"tour-image\">\n              <img src={tour.image} alt=\"GPS walk header decoration\" />\n            </div>\n\n            <div className=\"tour-overview-map\">\n              <Map \n                ref={mapRef}\n                zoomControl={false}\n                attributionControl={false}\n                style={{height:'350px'}}>\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n                <GeoJSON data={journeyPath} style={JOURNEY_STYLE} />\n                {journeyPOIs}\n              </Map>\n            </div>\n          </div>\n\n          <div className=\"tour-description\" dangerouslySetInnerHTML={{\n            __html: tour.getDescription(language)\n          }} />\n\n          <div className=\"start-tour\">\n            <Button onClick={onStartTour(tour)}>\n              <Icon icon=\"md-walk\" /> <label>{i18n('Start the tour')}</label>\n            </Button>\n          </div>\n        </>\n      }\n    </PageWithMenuDesktop>\n  )\n\n}\n\nexport default StartPage;","import React from 'react';\nimport { Icon, List, ListHeader, ListItem, Page, Radio } from 'react-onsenui';\nimport { useRecoilState } from 'recoil';\nimport { languageState } from './store/State';\nimport { useI18N } from './i18n';\n\nimport SearchPageMobile from './search/SearchPageMobile';\nimport SearchPageDesktop from './search/SearchPageDesktop';\n\nimport SplashPageMobile from './splash/SplashPageMobile';\nimport SplashPageDesktop from './splash/SplashPageDesktop';\n\nimport SerbsInVienna from './projects/SerbsInVienna';\nimport CampOberhollabrunn from './projects/CampOberhollabrunn';\n\nimport Help from './help/Help';\n\nimport MobileTour from './tour/mobile/StartPage';\nimport DesktopTour from './tour/desktop/StartPage';\n\nimport './SideMenu.scss';\n\nconst SideMenu = props => {\n\n  const [ language, setLanguage ] = useRecoilState(languageState);\n\n  const i18n = useI18N();\n\n  const onChangeLanguage = lang => {\n    setLanguage(lang);\n    window.localStorage.setItem('zukunftsfonds.language', lang);\n  }\n\n  const goTo = (mobileComponent, optDesktopComponent) => () => {\n\n    const component = props.isDesktop && optDesktopComponent ? \n      optDesktopComponent : mobileComponent;\n\n    const { pages } = props.navigator;\n    const currentPage = pages.length > 0 ? pages[pages.length - 1].props.component : null;\n    if (component !== currentPage)\n      props.navigator.pushPage({ component });\n    else \n      props.onClose && props.onClose();\n  }\n\n  const setSelected = pageName =>\n    props.current === pageName ? 'selected' : null;\n\n  return (\n    <Page className=\"side-menu\">\n      <List>\n        <ListItem \n          onClick={goTo(SplashPageMobile, SplashPageDesktop)}>\n            <Icon icon=\"md-home\" />\n            <label className={setSelected('SplashPage')}>{i18n('Home')}</label>\n        </ListItem>\n\n        <ListItem onClick={goTo(SearchPageMobile, SearchPageDesktop)}>\n          <Icon icon=\"md-search\" />\n          <label className={setSelected('Search')}>{i18n('Search')}</label>\n        </ListItem>\n      </List>\n\n      <List>\n        <ListHeader>\n          <Icon icon=\"md-info-outline\" />\n          <label>{i18n('Information')}</label>\n        </ListHeader>\n\n        <ListItem onClick={goTo(Help)}>\n          <label className={setSelected('Help')}>{i18n('User Help & App Info')}</label>\n        </ListItem>  \n\n        <ListItem className=\"projects\">\n          <div>\n            <label>{i18n('Projects')}</label>\n            <ul>\n              <li \n                onClick={goTo(SerbsInVienna)}\n                className={setSelected('SerbsInVienna')}>\n                  \n                {i18n('Serbs in Vienna 1741-1918')}\n              </li>\n\n              <li \n                onClick={goTo(CampOberhollabrunn)}\n                className={setSelected('CampOberhollabrunn')}>\n                  \n                {i18n('Orthodox Refugees in Hollabrunn 1914-1918')}\n              </li>\n            </ul>\n          </div>\n        </ListItem>\n      </List>\n      \n      <List>\n        <ListHeader>\n          <Icon icon=\"md-walk\" />\n          <label>{i18n('Walking Tours')}</label>\n        </ListHeader>\n        \n        <ListItem onClick={goTo(MobileTour, DesktopTour)}>\n          <label className={setSelected('Tour')}>Oberhollabrunn</label>\n        </ListItem>\n      </List>\n\n      <List className=\"set-language\">\n        <ListHeader>\n          <Icon icon=\"md-translate\" />\n          <label>{i18n('Language')}</label>\n        </ListHeader>\n        \n        <ListItem>\n          <label className=\"left\">\n            <Radio \n              inputId='EN' \n              name='EN' \n              onChange={() => onChangeLanguage('en')} \n              checked={language === 'en'} />\n          </label>\n          \n          <label htmlFor='EN' className=\"center\">\n            English\n          </label>\n        </ListItem>\n        <ListItem>\n          <label className=\"left\">\n            <Radio \n              inputId='DE' \n              name='DE' \n              onChange={() => onChangeLanguage('de')} \n              checked={language === 'de'} />\n          </label>\n          \n          <label htmlFor='DE' className=\"center\">\n            Deutsch\n          </label>\n        </ListItem>\n      </List>\n    </Page>\n  )\n\n}\n\nexport default SideMenu;","import React from 'react';\nimport { Page } from 'react-onsenui';\nimport SideMenu from './SideMenu';\n\nconst PageWithMenuDesktop = props => {\n\n  if (props.isDesktop && props.title)\n    window.document.title = `Orthodox Europe | ${props.title}`;\n  else\n    window.document.title = \"Orthodox Europe\";\n  \n  return (\n    <Page className={`${props.className} desktop`}>\n      <header>\n        <h1>Orthodox Europe {props.title && <span className=\"subtitle\">{`| ${props.title}`}</span> }</h1>\n      </header>\n      <div className=\"page-wrapper\">\n        <aside>\n          <SideMenu \n            current={props.current}\n            isDesktop={true}\n            navigator={props.navigator} />\n        </aside>\n        <main>\n          { props.children }\n        </main>\n      </div>\n    </Page>\n  )\n\n}\n\nexport default PageWithMenuDesktop;","import React from 'react';\nimport PageWithMenuDesktop from './PageWithMenuDesktop';\nimport PageWithMenuMobile from './PageWithMenuMobile';\n\n/**\n * A hybrid page that applies desktop or mobile layout automatically\n * on the same content\n */\nconst PageWithenu = props => {\n\n  return props.isDesktop ?\n    <PageWithMenuDesktop\n      current={props.title}\n      {...props}>\n\n      {props.children}\n\n    </PageWithMenuDesktop> :\n\n    <PageWithMenuMobile\n      {...props}>\n      \n      {props.children}\n\n    </PageWithMenuMobile>\n\n}\n\nexport default PageWithenu;","import React from 'react';\nimport { Button, Icon } from 'react-onsenui';\nimport PageWithMenu from '../PageWithMenu';\nimport { useI18N, useBilingual } from '../i18n';\nimport OverviewMap from '../map/OverviewMap';\nimport SearchPageMobile from '../search/SearchPageMobile';\nimport SerbsInVienna from '../projects/SerbsInVienna';\nimport CampOberhollabrunn from '../projects/CampOberhollabrunn';\n\nimport './SplashPage.scss';\n\nexport const SPLASH_MESSAGE = \n  `Das \"Digitale Geoportal der Geschichte der Orthodoxen in Österreich\" hat das Ziel, die Geschichte,\n   den Glauben und die Kultur der orthodoxen Kirchen und von deren Gläubigen in Europa, mit einem Schwerpunkt \n   auf Österreich, mit Hilfe von wissenschaftlichen Projekten zu erforschen und einer breiten Öffentlichkeit \n   zugänglich zu machen. ------------ The \"Digital Geoportal of the History of the Orthodox in Austria\" has the \n   aim to research the history, faith and culture of the Orthodox churches and their believers in Europe, with \n   a special emphasis on Austria, based on scholarly projects and to popularise all of the aforesaid aspects in \n   the general public.`\n\nconst SplashPage = props => {\n\n  const i18n = useI18N();\n\n  const getTranslation = useBilingual();\n\n  const goTo = component => () =>\n    props.navigator.pushPage({ component });\n  \n  return (\n    <PageWithMenu \n      className=\"splashpage\"\n      title={i18n('Orthodox Europe')}\n      navigator={props.navigator}>\n\n      <div className=\"splash-page-container\">\n        <div className=\"splash-image-container\">\n          <img className=\"splash-image\" src=\"images/OrthodoxyInEurope.png\" alt=\"Orthodoxy in Europe - Map\" />\n        </div>\n\n        <div className=\"buttons\">\n          <Button onClick={goTo(OverviewMap)}>\n            <Icon icon=\"md-globe\" />\n            <label>{i18n('Map')}</label>\n          </Button>\n          <Button onClick={goTo(SearchPageMobile)}>\n            <Icon icon=\"md-search\" />\n            <label>{i18n('Search')}</label>\n          </Button>\n        </div>\n\n        <div className=\"splash-message\">\n          <h1>\n            {i18n('Digital Geoportal of the History of the Orthodox in Austria')}\n          </h1>\n          <p>\n            {getTranslation(SPLASH_MESSAGE)}\n          </p>\n        </div>\n\n        <div className=\"projects\">\n          <h2>{i18n('Projects')}</h2>\n          <ol>\n            <li>\n              <Button modifier=\"large--quiet\" onClick={goTo(SerbsInVienna)}>\n                {i18n('Serbs in Vienna 1741-1918')}\n              </Button>\n            </li>\n            \n            <li>\n              <Button modifier=\"large--quiet\" onClick={goTo(CampOberhollabrunn)}>\n                {i18n('Orthodox Refugees in Hollabrunn 1914-1918')}\n              </Button>\n            </li>\n          </ol>\n        </div>\n\n        <footer>\n          <strong>{i18n('Imprint')}</strong><br/>\n          Digitales Geoportal der Geschichte der Orthodoxen in Österreich<br/>\n          Vertreten durch:<br/>\n          Priv.-Doz. Mag. Dr. Mihailo Popović, Projektleiter<br/>\n          Kiningergasse 12/2/7<br/>\n          1120 Wien<br/>\n          Österreich<br/>\n          <a href=\"mailto:mihailop@hotmail.com\">mihailop@hotmail.com</a>\n        </footer>\n      </div>\n    </PageWithMenu>\n  )\n\n}\n\nexport default SplashPage;","import React, { useEffect, useRef } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { RecoilRoot } from 'recoil';\nimport { Navigator } from 'react-onsenui';\n\nimport SplashPageMobile from './splash/SplashPageMobile';\nimport SplashPageDesktop from './splash/SplashPageDesktop';\n\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\nimport './App.scss';\n\nconst App = props => {\n\n  const nav = useRef();\n\n  const renderPage = (route, navigator) =>\n    React.createElement(route.component, { \n      ...route, \n      navigator, \n      key: props.key || uuid(), // Needs a key per definition and we want to re-render always\n      store: props.store,\n      isDesktop: props.isDesktop\n    });\n\n  // Pushes a state to the window history, so the back button doesn't\n  // close the app. It's actually just a dummy push (the state is never\n  // read). We'll rewire window.onpopstate instead to pop the navigator.\n  const onPostPush = evt => {\n    const { name } = evt.routes.pushedRoute.component;\n    window.history.pushState({ name }, '');\n  }\n\n  useEffect(() => {\n    window.onpopstate = () =>\n      nav.current && nav.current.popPage();\n  }, []);\n\n  const splashPage = props.isDesktop ? SplashPageDesktop : SplashPageMobile;\n\n  return (\n    <RecoilRoot>\n      <Navigator\n        ref={nav}\n        renderPage={renderPage}\n        initialRoute={{ component: splashPage, key: 'SplashPage' }} \n        onPostPush={onPostPush}\n        animation={props.isDesktop ? 'none' : 'slide'}\n        swipeable />\n    </RecoilRoot>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport { ProgressCircular } from 'react-onsenui';\n\nimport './LoadingScreen.scss';\n\nconst LoadingScreen = props => {\n\n  return(\n    <div className=\"loading-screen\">\n      <div className=\"loading-wrapper\">\n        <label>Loading</label>\n        <div>\n          <ProgressCircular indeterminate />\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default LoadingScreen;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\nimport * as JsSearch from 'js-search';\nimport centroid from '@turf/centroid';\n\nimport { getRelatedItems } from '../profiles/RelatedItems';\nimport { hasGeometry } from '../profiles/Utils';\nimport CRM from '../CRM';\n\n/**\n * Helper to compute the bounding box of all places in the dataset.\n */\nconst computeGeoBounds = places => {\n  const coords = places.reduce((allCoords, p) => {\n    const g = p.geometry;\n\n    // Support all the ways in which the data encodes point/poly coords\n    if (g.coordinates) {\n      if (Array.isArray(g.coordinates[0])) {\n        if (Array.isArray(g.coordinates[0][0]))\n          return allCoords.concat(...g.coordinates);\n        else \n          return allCoords.concat(g.coordinates);\n      } else {\n        // Single coordinate tuple\n        return allCoords.concat([ g.coordinates ]);\n      }\n    } else {\n      return allCoords;\n    }\n  }, []);\n\n  const lons = coords.map(t => t[0]);\n  const lats = coords.map(t => t[1]); \n\n  const minLon = Math.min(...lons);\n  const maxLon = Math.max(...lons);\n  const minLat = Math.min(...lats);\n  const maxLat = Math.max(...lats);\n\n  return [\n    [ minLat, minLon ],\n    [ maxLat, maxLon ]\n  ];\n}\n\n/**\n * Helper to compute the spatial 'life paths' of all actors, i.e. the \n * pairs of coordinates for actor 'begins_in' and 'ends_in' properties.\n * \n * Note that the computation will filter out places that don't have\n * coordinates.\n */\nconst computeLifePaths = (store, actors) => {\n  const paths = actors.reduce((paths, actor) => {\n    let { begins_in, ends_in } = getRelatedItems(actor, store).places; // .filter(p => hasGeometry(p));\n    \n    begins_in = begins_in.filter(p => hasGeometry(p));\n    ends_in = ends_in.filter(p => hasGeometry(p));\n\n    if (begins_in.length > 0 && ends_in.length > 0) {\n      return [ ...paths, {\n        actor, \n        begins: begins_in[0],\n        ends: ends_in[0]\n      }];\n    } else {\n      return paths;\n    }\n  }, []);\n\n  // Sort paths by distance\n  paths.sort((a, b) => {\n    const [ aBegins, aEnds ] = [\n      centroid(a.begins).geometry.coordinates,\n      centroid(a.ends).geometry.coordinates\n    ];\n\n    const [ bBegins, bEnds ] = [\n      centroid(b.begins).geometry.coordinates,\n      centroid(b.ends).geometry.coordinates\n    ]; \n\n    const distA = Math.sqrt(Math.pow(aEnds[0] - aBegins[0], 2) + Math.pow(aEnds[1] - aBegins[1], 2));\n    const distB = Math.sqrt(Math.pow(bEnds[0] - bBegins[0], 2) + Math.pow(bEnds[1] - bBegins[1], 2));\n\n    return distA - distB;\n  });\n\n  return paths;\n}\n\n/**\n * Because (fortunately) our data is static, the data store\n * is just a convenience wrapper over the JSON data files. \n */\nexport default class DataStore {\n\n  constructor() {\n    this.actors = [];\n    this.places = [];\n\n    // Geo-bounds of all places in the dataset\n    this.geoBounds = null;\n\n    // The 'life paths', pairs of coordinates for actors'\n    // begins_in/ends_in properties\n    this.lifePaths = [];\n\n    this.search = new JsSearch.Search('@id');   \n    this.search.tokenizer = {\n      tokenize(text) {\n        return text\n          .replace(/[.,'\"#!$%^&*;:{}=\\-_`~()]/g, '')\n          .split(/[\\s,-]+/)\n      }\n    };\n\n    this.search.addIndex([ 'properties', 'title' ]); \n  }\n\n  load() {\n    const loadFile = entityType => \n      axios.get(`data/items_${entityType}.json`).then(response =>\n        response.data.results.reduce((items, next) => items.concat(next.features), []));\n    \n    const responses = Promise.all([\n      loadFile('actor'),\n      loadFile('place')\n    ]);\n\n    return responses.then(arr => {\n      const [ actors, places ] = arr;\n\n      this.actors = actors;\n      this.places = places;\n\n      this.items = this.actors.concat(this.places);\n\n      this.geoBounds = computeGeoBounds(places);\n      this.lifePaths = computeLifePaths(this, actors);\n\n      this.search.addDocuments([ ...actors, ...places ]);\n    });\n  }\n\n  findById(id) {\n    return this.items.find(i => i['@id'] === id);\n  }\n\n  searchAll(query) {\n    return this.search.search(query.toLowerCase());\n  }\n\n  getPlaceWithLocation(id) {\n    return this.places.find(place => place.relations.find(rel => \n      rel.relationTo === id && rel.relationType === CRM.P53_has_former_or_current_location));\n  }\n\n  getActorsWithLocation(id) {\n    const relevantTypes = [\n      CRM.OA8_begins_in,\n      CRM.OA9_ends_in,\n      CRM.P74_has_current_or_former_residence\n    ];\n\n    return this.actors.filter(actor => actor.relations.find(rel => \n      rel.relationTo === id && relevantTypes.includes(rel.relationType)));\n  }\n  \n}\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport LoadingScreen from './splash/LoadingScreen';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport DataStore from './store/DataStore';\nimport L from 'leaflet';\n\n// Fix missing Leaflet marker images\n// Cf. https://github.com/PaulLeCam/react-leaflet/issues/453\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: 'images/leaflet/marker-icon-2x.png',\n    iconUrl: 'images/leaflet/marker-icon.png',\n    shadowUrl: 'images/leaflet/marker-shadow.png'\n});\n\n// A simple start helper that loads the data and then switches to the app\nconst Launcher = () => {\n\n  const isDesktop = window.screen.availWidth > 799;\n\n  const [ isLoading, setIsLoading ] = useState(true);\n\n  const store = new DataStore();\n  store.load().then(() => setIsLoading(false));\n  \n  return (\n    <>{ isLoading ? <LoadingScreen /> : <App store={store} isDesktop={isDesktop} /> }</>\n  )\n\n}\n\nReactDOM.render(\n  <Launcher />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n","var map = {\n\t\"./messages_de.json\": 75\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 74;"],"sourceRoot":""}