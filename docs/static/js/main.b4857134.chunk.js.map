{"version":3,"sources":["i18n sync /^/.//messages_.*/.json$","store/State.js","i18n/index.js","search/ResultList.jsx","profiles/ActorProfile.jsx","profiles/Utils.js","profiles/PlaceProfile.jsx","search/SearchPage.jsx","SideMenu.jsx","tour/index.js","PageWithMenu.jsx","splash/SplashPage.jsx","App.js","serviceWorker.js","store/DataStore.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","languageState","atom","key","default","window","localStorage","getItem","searchQueryState","searchResultState","i18n","loadMessages","lang","messages","require","t","label","this","useI18N","useRecoilValue","useBilingual","description","indexOf","split","trim","ICONS","ResultList","props","Row","index","style","item","results","className","onClick","onSelect","modifier","icon","crmClass","properties","title","height","width","itemCount","length","itemSize","ActorProfile","getTranslation","store","navigator","residences","getResidences","backButton","d","idx","value","dataSource","renderHeader","renderRow","r","navigateTo","PROFILE_COMPONENTS","mapRef","useRef","useEffect","current","leafletElement","fitBounds","geojson","corners","bbox","getBounds","actors","getActors","Map","ref","zoomControl","TileLayer","attribution","url","GeoJSON","data","getProfileComponent","_","pushPage","component","actor","relations","filter","rel","relationType","getPlaceWithLocation","relationTo","place","location","find","getActorsWithResidence","SearchPage","search","setSearch","useSetRecoilState","setResults","onSearch","evt","query","target","toLowerCase","searchAll","onClearSearch","renderToolbar","placeholder","onChange","result","SideMenu","useRecoilState","language","setLanguage","onChangeLanguage","setItem","SplashPage","Promise","reject","geolocation","getCurrentPosition","pos","then","console","log","catch","inputId","name","checked","htmlFor","PageWithMenu","useState","isMenuOpen","setMenuOpen","children","animation","mode","side","collapse","isOpen","onClose","src","alt","App","renderPage","route","React","createElement","uuid","initialRoute","swipeable","Boolean","hostname","match","DataStore","events","places","JsSearch","tokenizer","tokenize","text","addIndex","loadFile","entityType","axios","get","response","reduce","items","next","concat","features","all","arr","addDocuments","i","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","Launcher","isLoading","setIsLoading","load","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b4857134.chunk.js","sourcesContent":["var map = {\n\t\"./messages_de.json\": 55\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 54;","import { atom } from 'recoil';\n\nexport const languageState = atom({\n  key: 'language',\n  default: window.localStorage.getItem('zukunftsfonds.language') || 'en'\n});\n\nexport const searchQueryState = atom({\n  key: 'searchQuery',\n  default: ''\n});\n\nexport const searchResultState = atom({\n  key: 'searchResults',\n  default: []\n});","import { useRecoilValue } from 'recoil';\nimport { languageState } from '../store/State';\n\nclass I18N {\n\n  constructor() {\n    this.messages = {};\n\n    // For potential future extension\n    this.loadMessages('de');\n  }\n\n  loadMessages = lang => {\n    this.messages[lang] = require(`./messages_${lang}.json`);\n  }\n\n  t = lang => label =>\n    lang in this.messages && label in this.messages[lang] ?\n      this.messages[lang][label] : label;\n\n}\n\nconst i18n = new I18N();\n\n// Wrapping I18N in a cool helper hook\nexport const useI18N = () => {\n\n  const lang = useRecoilValue(languageState);\n  return i18n.t(lang);\n\n}\n\n// Helper to handle the ad-hoc 'bilingual' description format of the project\nexport const useBilingual = () => {\n  \n  const lang = useRecoilValue(languageState);\n \n  return description => {\n    // Project convention: ------------ separates EN from DE\n    if (description.indexOf('------------') === -1) {\n      return description;\n    } else {\n      return lang === 'de' ? description.split('------------')[0].trim() : description.split('------------')[1].trim();\n    }\n  }\n\n}","import React from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport { Icon, Ripple } from 'react-onsenui';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport './ResultList.scss';\n\nconst ICONS = {\n  'crm:E18_Physical_Thing': 'md-pin',\n  'crm:E21_Person': 'md-account',\n  'crm:E74_Group': 'md-accounts'\n}\n\nconst ResultList = props => {\n\n  const Row = ({ index, style }) => {\n    const item = props.results[index];\n\n    return (<div \n      className=\"search-result\" \n      style={style}\n      onClick={() => props.onSelect(props.results[index])}>\n\n      <Ripple modifier=\"light-gray\" />\n\n      <Icon icon={ICONS[item.crmClass]} />\n\n      <label>{item.properties.title}</label>\n    </div>)\n  }\n\n  return (\n    <div className=\"search-results\">\n      <AutoSizer>\n        {({ height, width}) => (\n          <List \n            height={height}\n            itemCount={props.results.length}\n            itemSize={58}\n            width={width}>\n            {Row}\n          </List>\n          )\n        }\n      </AutoSizer>\n    </div>\n  )\n\n}\n\nexport default ResultList;","import React from 'react';\nimport { Icon, List, ListHeader, ListItem } from 'react-onsenui';\nimport { getResidences, navigateTo } from './Utils';\nimport PageWithMenu from '../PageWithMenu';\nimport { useI18N, useBilingual } from '../i18n';\n\nimport './Profile.scss';\n\nconst ActorProfile = props => {\n\n  const i18n = useI18N();\n\n  const getTranslation = useBilingual();\n\n  const { item, store, navigator } = props;\n\n  const residences = getResidences(item, store);\n\n  return (\n    <PageWithMenu \n      backButton\n      className=\"profile actor\"\n      title={item.properties.title}\n      navigator={props.navigator}>\n\n      {item.description.map((d, idx) => \n        <div key={idx} className=\"description\">{getTranslation(d.value)}</div>\n      )}\n\n      <List\n        className=\"related places\"\n        dataSource={residences}\n        renderHeader={() =>\n          <ListHeader>\n            <Icon icon=\"md-pin\" />\n            <label>{i18n('Places')}</label>\n          </ListHeader>\n        }\n        renderRow={(r, idx) => \n          <ListItem key={idx} className=\"related residence\" onClick={navigateTo(r, navigator)}>\n            <span className=\"title\">{r.properties.title}</span>\n          </ListItem>\n        } />\n    </PageWithMenu>\n  )\n\n}\n\nexport default ActorProfile;","import ActorProfile from '../profiles/ActorProfile';\nimport PlaceProfile from '../profiles/PlaceProfile';\n\nconst PROFILE_COMPONENTS = {\n  'crm:E18_Physical_Thing': PlaceProfile,\n  'crm:E21_Person': ActorProfile,\n  'crm:E74_Group': ActorProfile\n}\n\n/** Returns the right JSX profile component for this item **/\nexport const getProfileComponent = item => PROFILE_COMPONENTS[item.crmClass];\n\n/** Returns a handler function for navigating to the view appropriate to the given item **/\nexport const navigateTo = (item, navigator) => _ =>\n  navigator.pushPage({ component: getProfileComponent(item), item });\n\n/** Returns the residences linked to an actor **/\nexport const getResidences = (actor, store) => {\n  // CRM 'hasCurrentOrFormerResidence' relations on actor (if any)\n  const residences = actor.relations.filter(rel =>\n    rel.relationType === 'crm:P74_has_current_or_former_residence');\n\n  // Relation points to location -> get place\n  return residences.map(rel =>\n    store.getPlaceWithLocation(rel.relationTo));\n}\n\n/** Returns the actors linke to a place **/\nexport const getActors = (place, store) => {\n  // CRM 'hasFormerOrCurrentLocation' relations on place (if any)\n  const location = place.relations.find(rel =>\n    rel.relationType === 'crm:P53_has_former_or_current_location');\n\n  return location?.relationTo ? store.getActorsWithResidence(location.relationTo) : [];\n}\n","import React, { useEffect, useRef } from 'react';\nimport { Icon, List, ListHeader, ListItem } from 'react-onsenui';\nimport { GeoJSON, Map, TileLayer } from 'react-leaflet';\nimport bbox from '@turf/bbox';\nimport { getActors, navigateTo } from './Utils';\nimport PageWithMenu from '../PageWithMenu';\nimport { useI18N, useBilingual } from '../i18n';\n\nimport 'leaflet/dist/leaflet.css';\nimport './Profile.scss';\n\nconst getBounds = geojson => {\n  const corners = bbox(geojson);\n  return [ // Leaflet order\n    [ corners[1], corners[0] ],\n    [ corners[3], corners[2] ]\n  ];\n}\n\nconst PlaceProfile = props => {\n\n  const i18n = useI18N();\n\n  const getTranslation = useBilingual();\n\n  const mapRef = useRef();\n\n  const { item, navigator, store } = props;\n\n  useEffect(() => {\n    if (mapRef.current) {\n      const map = mapRef.current.leafletElement;\n      map.fitBounds(getBounds(item));\n    }\n  }, [ item ]);\n\n  const actors = getActors(item, store);\n\n  return (\n    <PageWithMenu \n      backButton\n      className=\"profile place\"\n      title={item.properties.title}\n      navigator={props.navigator}>\n\n      <div className=\"map-container\">\n        <Map \n          ref={mapRef}\n          zoomControl={false}\n          style={{height:'200px'}}>\n          <TileLayer\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <GeoJSON data={item} />\n        </Map>\n      </div>\n      {item.description.map((d, idx) => \n        <div key={idx} className=\"description\">{getTranslation(d.value)}</div>\n      )}\n\n      <List\n        className=\"related actors\"\n        dataSource={actors}\n        renderHeader={() =>\n          <ListHeader>\n            <Icon icon=\"md-account\" />\n            <label>{i18n('People')}</label>\n          </ListHeader>\n        }\n        renderRow={(r, idx) => \n          <ListItem key={idx} className=\"related residence\" onClick={navigateTo(r, navigator)}>\n            <span className=\"title\">{r.properties.title}</span>\n          </ListItem>\n        } />\n    </PageWithMenu>\n  )\n\n}\n\nexport default PlaceProfile;","import React from 'react';\nimport { BackButton, Icon, Page, Input, Toolbar, ToolbarButton } from 'react-onsenui';\nimport ResultList from './ResultList';\nimport { getProfileComponent } from '../profiles/Utils';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { searchQueryState, searchResultState } from '../store/State';\nimport { useI18N }from '../i18n';\n\nimport './SearchPage.scss';\n\nconst SearchPage = props => {\n\n  const i18n = useI18N();\n\n  // We'll keep search state global, so we can persist across page navigation\n  const search = useRecoilValue(searchQueryState);\n  const setSearch = useSetRecoilState(searchQueryState);\n  \n  const results = useRecoilValue(searchResultState);\n  const setResults = useSetRecoilState(searchResultState);\n\n  const onSearch = evt => {\n    const query = evt.target.value.toLowerCase();\n\n    // For some weird reason, OnsenUI SearchInput also triggers\n    // onChange when losing focus, causing an unwanted re-render\n    if (search !== query) {\n      setSearch(query);\n\n      const results = props.store.searchAll(query);\n      setResults(results);\n    }\n  }\n\n  const onSelectResult = result =>\n    props.navigator.pushPage({ \n      component: getProfileComponent(result), \n      item: result \n    });\n\n  const onClearSearch = () => {\n    setSearch('');\n    setResults([]);\n  }\n\n  return (\n    <Page\n      className=\"search\"\n      renderToolbar={() => \n        <Toolbar>\n          <div className=\"left\">\n            <BackButton />\n          </div>\n\n          <div className=\"center\">\n            <Input\n              value={search}\n              placeholder={i18n('Search')}\n              onChange={onSearch} />\n          </div>\n          \n          <div className=\"right\">\n            <ToolbarButton>\n              <Icon icon=\"md-close\" onClick={onClearSearch} />\n            </ToolbarButton>\n          </div>\n        </Toolbar>\n      }>\n\n      <ResultList\n        results={results} \n        onSelect={onSelectResult} />\n    </Page>\n  )\n\n}\n\nexport default SearchPage;","import React from 'react';\nimport { Icon, List, ListHeader, ListItem, Page, Radio } from 'react-onsenui';\nimport { useRecoilState } from 'recoil';\nimport { languageState } from './store/State';\nimport { fetchUserLocation } from './tour';\nimport { useI18N } from './i18n';\nimport SearchPage from './search/SearchPage';\nimport SplashPage from './splash/SplashPage';\n\nimport './SideMenu.scss';\n\nconst SideMenu = props => {\n\n  const [ language, setLanguage ] = useRecoilState(languageState);\n\n  const i18n = useI18N();\n\n  const onChangeLanguage = lang => {\n    setLanguage(lang);\n    window.localStorage.setItem('zukunftsfonds.language', lang);\n  }\n\n  const onHome = () => \n    props.navigator.pushPage({ component: SplashPage });\n\n  const onSearch = () =>\n    props.navigator.pushPage({ component: SearchPage });\n\n  // Just for testing\n  const onStartTour = () =>\n    fetchUserLocation()\n      .then(pos => console.log(pos))\n      .catch(() => console.log('rejected or not available'));\n\n  return (\n    <Page className=\"side-menu\">\n      <List>\n        <ListItem onClick={onHome}>\n          <Icon icon=\"md-home\" />\n          <label>{i18n('Home')}</label>\n        </ListItem>\n        <ListItem onClick={onSearch}>\n          <Icon icon=\"md-search\" />\n          <label>{i18n('Search')}</label>\n        </ListItem>\n      </List>\n\n      <List>\n        <ListHeader>\n          <Icon icon=\"md-info-outline\" />\n          <label>{i18n('Information')}</label>\n        </ListHeader>\n\n        <ListItem>\n          <label>{i18n('Help')}</label>\n        </ListItem>  \n\n        <ListItem className=\"projects\">\n          <div>\n            <label>{i18n('Projects')}</label>\n            <ul>\n              <li>Orthodoxes Wien</li>\n              <li>Oberhollabrunn</li>\n            </ul>\n          </div>\n        </ListItem>\n        \n        <ListItem>\n          <label>{i18n('About Us')}</label>\n        </ListItem>\n      </List>\n      \n      <List>\n        <ListHeader>\n          <Icon icon=\"md-walk\" />\n          <label>{i18n('Walking Tours')}</label>\n        </ListHeader>\n        \n        <ListItem onClick={onStartTour}>\n          <label>Oberhollabrunn</label>\n        </ListItem>\n      </List>\n\n      <List className=\"set-language\">\n        <ListHeader>\n          <Icon icon=\"md-translate\" />\n          <label>{i18n('Language')}</label>\n        </ListHeader>\n        \n        <ListItem>\n          <label className=\"left\">\n            <Radio \n              inputId='EN' \n              name='EN' \n              onChange={() => onChangeLanguage('en')} \n              checked={language === 'en'} />\n          </label>\n          \n          <label htmlFor='EN' className=\"center\">\n            English\n          </label>\n        </ListItem>\n        <ListItem>\n          <label className=\"left\">\n            <Radio \n              inputId='DE' \n              name='DE' \n              onChange={() => onChangeLanguage('de')} \n              checked={language === 'de'} />\n          </label>\n          \n          <label htmlFor='DE' className=\"center\">\n            Deutsch\n          </label>\n        </ListItem>\n      </List>\n    </Page>\n  )\n\n}\n\nexport default SideMenu;","/**\n * Wraps the location API call into a proper Promise.\n * \n * Note that on Chrome, the Geolocation API only works on HTTPS.\n */\nexport const fetchUserLocation = () => new Promise((resolve, reject) => {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(\n      pos => resolve(pos), // Success\n      () => reject() // Error\n    );\n  } else { \n    reject(); // Not supported\n  }\n});","import React, { useState } from 'react';\nimport { \n  BackButton,\n  Icon, \n  Page, \n  Splitter, \n  SplitterContent, \n  SplitterSide, \n  Toolbar, \n  ToolbarButton \n} from 'react-onsenui';\nimport SideMenu from './SideMenu';\n\nconst PageWithMenu = props => {\n\n  const [ isMenuOpen, setMenuOpen ] = useState(false);\n\n  return (\n    <Page className={props.className}>\n      <Splitter>\n        <SplitterContent>\n          <Page \n            renderToolbar={() => \n              <Toolbar>\n                { props.backButton &&\n                  <BackButton />\n                }\n                <div className=\"center\">\n                  { props.title }\n                </div>\n                <div className=\"right\">\n                  <ToolbarButton onClick={() => setMenuOpen(true)}>\n                    <Icon icon=\"md-menu\" />\n                  </ToolbarButton>\n                </div>\n              </Toolbar>\n            }>\n\n            { props.children }\n\n          </Page>\n        </SplitterContent>\n        <SplitterSide\n          animation=\"overlay\"\n          mode=\"collapse\"\n          side=\"right\"\n          collapse={true}\n          width=\"300px\"\n          isOpen={isMenuOpen}\n          onClose={() => setMenuOpen(false)}>\n\n          <SideMenu navigator={props.navigator} />\n\n        </SplitterSide>\n      </Splitter>\n    </Page>\n  )\n\n}\n\nexport default PageWithMenu;","import React from 'react';\nimport PageWithMenu from '../PageWithMenu';\nimport { useI18N, useBilingual } from '../i18n';\n\nimport './SplashPage.scss';\n\nconst SPLASH_MESSAGE = \n  `Das \"Digitale Geoportal der Geschichte der Orthodoxen in Österreich\" hat das Ziel, die Geschichte,\n   den Glauben und die Kultur der orthodoxen Kirchen und von deren Gläubigen in Europa, mit einem Schwerpunkt \n   auf Österreich, mit Hilfe von wissenschaftlichen Projekten zu erforschen und einer breiten Öffentlichkeit \n   zugänglich zu machen. ------------ The \"Digital Geoportal of the History of the Orthodox in Austria\" has the \n   aim to research the history, faith and culture of the Orthodox churches and their believers in Europe, with \n   a special emphasis on Austria, based on scholarly projects and to popularise all of the aforesaid aspects in \n   the general public.`\n\nconst SplashPage = props => {\n\n  const i18n = useI18N();\n\n  const getTranslation = useBilingual();\n\n  return (\n    <PageWithMenu \n      title={i18n('Orthodox Europe')}\n      navigator={props.navigator}>\n\n      <div className=\"splash-page-container\">\n        <div className=\"splash-image-container\">\n          <img className=\"splash-image\" src=\"images/OrthodoxyInEurope.png\" alt=\"Orthodoxy in Europe - Map\" />\n        </div>\n\n        <div className=\"splash-message\">\n          <h1>\n            {i18n('Digital Geoportal of the History of the Orthodox in Austria')}\n          </h1>\n          <p>\n            {getTranslation(SPLASH_MESSAGE)}\n          </p>\n        </div>\n      </div>\n    </PageWithMenu>\n  )\n\n}\n\nexport default SplashPage;","import React from 'react';\nimport { RecoilRoot } from 'recoil';\nimport { Navigator } from 'react-onsenui';\nimport SplashPage from './splash/SplashPage';\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport { v4 as uuid } from 'uuid';\n\nimport './App.scss';\n\nconst App = props => {\n\n  // TODO looks like this renders multiple times!\n\n  const renderPage = (route, navigator) =>\n    React.createElement(route.component, { \n      ...route, \n      navigator, \n      key: uuid(), // Needs a key per definition and we want to re-render always\n      store: props.store\n    });\n\n  return (\n    <RecoilRoot>\n      <Navigator\n        renderPage={renderPage}\n        initialRoute={{ component: SplashPage }} \n        animation=\"slide\"\n        swipeable />\n    </RecoilRoot>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\nimport * as JsSearch from 'js-search';\n\n/**\n * Because (fortunately) our data is static, the data store\n * is just a convenience wrapper over the JSON data files. \n */\nexport default class DataStore {\n\n  constructor() {\n    this.actors = [];\n    this.events = [];\n    this.places = [];\n\n    this.search = new JsSearch.Search('@id');   \n    this.search.tokenizer = {\n      tokenize(text) {\n        return text.split(/[\\s,-]+/)\n      }\n    };\n\n    this.search.addIndex([ 'properties', 'title' ]); \n  }\n\n  load() {\n    const loadFile = entityType => \n      axios.get(`data/api/items_${entityType}.json`).then(response =>\n        response.data[0].reduce((items, next) => items.concat(next.features), []));\n    \n    const responses = Promise.all([\n      loadFile('actor'),\n      loadFile('event'),\n      loadFile('place')\n    ]);\n\n    return responses.then(arr => {\n      const [ actors, events, places ] = arr;\n      \n      this.actors = actors;\n      this.events = events;\n      this.places = places;\n\n      this.search.addDocuments([ ...actors, /* ...events ,*/ ...places ]);\n    });\n  }\n\n  findById(id) {\n    return this.items.find(i => i['@id'] === id);\n  }\n\n  searchAll(query) {\n    return this.search.search(query.toLowerCase());\n  }\n\n  getPlaceWithLocation(id) {\n    return this.places.find(place => place.relations.find(rel => \n      rel.relationTo === id && rel.relationType === 'crm:P53_has_former_or_current_location'));\n  }\n\n  getActorsWithResidence(id) {\n    return this.actors.filter(actor => actor.relations.find(rel => \n      rel.relationTo === id && rel.relationType === 'crm:P74_has_current_or_former_residence'));\n  }\n  \n}\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport DataStore from './store/DataStore';\nimport L from 'leaflet';\n\n// Fix missing Leaflet marker images\n// Cf. https://github.com/PaulLeCam/react-leaflet/issues/453\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// A simple start helper that loads the data and then switches to the app\nconst Launcher = () => {\n\n  const [ isLoading, setIsLoading ] = useState(true);\n\n  const store = new DataStore();\n  store.load().then(() => setIsLoading(false));\n\n  return (\n    <>{ isLoading ? <div>Loading</div> : <App store={store} /> }</>\n  )\n\n}\n\nReactDOM.render(\n  <Launcher />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}